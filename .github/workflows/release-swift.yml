name: Release Swift Package

on:
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  deployiostokens:
    name: Deploy Swift Package
    runs-on: ubuntu-latest
    needs: release
    env:
      CI_COMMIT_MESSAGE: Continuous Integration Deployment ${{ github.sha }}}
      CI_COMMIT_AUTHOR: Continuous Integration
    steps:
      - name: Get token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GREEN_BOT_APP_ID }}
          private-key: ${{ secrets.GREEN_BOT_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: seb-oss/green-tokens-ios
          ref: main
          token: ${{ steps.app-token.outputs.token }}

      # - name: Get artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: iostokens

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - name: Push changes
        run: |
          git add .
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
          git tag -a ${{ needs.release.outputs.tokensversion }} -m "Version ${{ needs.release.outputs.tokensversion }} of the Green Tokens Package for Swift."
          git push origin ${{ needs.release.outputs.tokensversion }}
