/*! For license information please see lib-chart-Get-started-stories-mdx.8a2989cb.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[878],{"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./libs/angular-charts/src/lib/chart/Get-started.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>Get_started_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=(__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs"),__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",h3:"h3",a:"a"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Get started"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"install",children:"Install"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{children:"npm install @sebgroup/green-angular-charts --save\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"import-chart-module",children:"Import chart module"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["We recommend import ",(0,jsx_runtime.jsx)(_components.code,{children:"NggChartsModule"})," into a shared module eg. ",(0,jsx_runtime.jsx)(_components.code,{children:"SharedModule"})," that can be imported into other, preferably lazy loaded modules when needed."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-ts",children:"import { NggChartsModule } from '@sebgroup/green-angular-charts'\n\n@NgModule({\n  declarations: [...],\n  imports: [\n    ...\n    NggChartsModule\n  ],\n  exports: [\n    NggChartsModule\n  ]\n})\nexport class SharedModule {}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"import-styling",children:"Import styling"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"We recommend setting up your Angular project to use scss (SASS) for css preprocessing."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Once configured to use scss, it's just a matter of including the scss to your main styles file, typically it would be ",(0,jsx_runtime.jsx)(_components.code,{children:"styles.scss"})," located at the root of the ",(0,jsx_runtime.jsx)(_components.code,{children:"src"})," folder unless you've changed it.\nDon't forget to add the base styles for green as they're needed too (example with minimal dependencies will be added later)."]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"add-scss",children:"Add scss"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.code,{children:"{project}/src/styles.scss"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-css",children:"// import base styles from green/chlorophyll\n@use '~@sebgroup/chlorophyll/scss';\n\n// import chart styles from green-charts\n@use \"~@sebgroup/green-charts/scss\" as charts;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"add-and-use-component",children:"Add and use component"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.code,{children:"{project}/src/app/ex-bar-chart/ex-bar-chart.component.ts"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-ts",children:"import { Component } from '@angular/core'\nimport { ChartSettings } from '@sebgroup/green-charts'\n\n@Component({\n  selector: 'ex-bar-chart',\n  template: `<ngg-chart [settings]=\"settings\"></ngg-chart>`,\n  styleUrls: ['./green-charts.component.css'],\n})\nexport class BarChartsComponent {\n  settings: ChartSettings = {\n    data: [\n      {\n        name: 'Antal',\n        type: 'bar',\n        values: [234, 197, 97, 12],\n      },\n    ],\n    categories: [\n      'Signerade avtal (SEB)',\n      'Påbörjade trials (Oxceed)',\n      'Aktiverade prenumerationer',\n      'Avslutade prenumerationer (endast efter avslutad ordinarie pren.)',\n    ],\n  }\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"have-other-needs",children:"Have other needs?"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["More examples and use cases coming soon! In the meantime create an ",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/sebgroup/green/issues",target:"_blank",rel:"nofollow noopener noreferrer",children:"issue over at github"})]})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Get started",tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const Get_started_stories=componentMeta,__namedExportsOrder=["__page"]}}]);