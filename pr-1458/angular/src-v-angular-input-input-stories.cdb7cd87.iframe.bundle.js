(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[7735],{"./libs/angular/src/lib/shared/external-link/external-link.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{V:()=>ExternalLinkDirective});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_router__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs");let ExternalLinkDirective=class ExternalLinkDirective{constructor(link){this.link=link,this.external=!1}ngOnInit(){this.external&&(this.link.onClick=()=>(window.location.href=this.link.commands[0],!1))}static#_=this.ctorParameters=()=>[{type:_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk}];static#_2=this.propDecorators={external:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}]}};ExternalLinkDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({selector:"a[routerLink]"}),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Sn)("design:paramtypes",[_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk])],ExternalLinkDirective)},"./libs/angular/src/v-angular/button/button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Q:()=>ButtonComponent,i:()=>ButtonStyle});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var ButtonComponent_1,ButtonStyle,button_componentngResource=__webpack_require__("./libs/angular/src/v-angular/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ngneat_transloco=__webpack_require__("./node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs"),base_control_value_accessor_component=__webpack_require__("./libs/angular/src/v-angular/base-control-value-accessor/base-control-value-accessor.component.ts");!function(ButtonStyle){ButtonStyle[ButtonStyle.Primary=0]="Primary",ButtonStyle[ButtonStyle.Secondary=1]="Secondary",ButtonStyle[ButtonStyle.Alternative=2]="Alternative",ButtonStyle[ButtonStyle.Delete=3]="Delete",ButtonStyle[ButtonStyle.DeleteConfirm=4]="DeleteConfirm",ButtonStyle[ButtonStyle.Ghost=5]="Ghost",ButtonStyle[ButtonStyle.GhostDark=6]="GhostDark",ButtonStyle[ButtonStyle.Link=7]="Link"}(ButtonStyle||(ButtonStyle={}));let ButtonComponent=class ButtonComponent extends base_control_value_accessor_component.q{static#_=ButtonComponent_1=this;constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="button",this.type="button",this.buttonStyle="link"===this.type?ButtonStyle.Link:ButtonStyle.Primary,this.small=!1,this.external=!1,this.buttonClasses={},this.ngvClick=new core.EventEmitter}static buttonStyleClasses(type,small){return{small,primary:type===ButtonStyle.Primary||type===ButtonStyle.Delete,secondary:type===ButtonStyle.Secondary,tertiary:type===ButtonStyle.Alternative||type===ButtonStyle.Link,danger:type===ButtonStyle.Delete||type===ButtonStyle.DeleteConfirm,ghost:type===ButtonStyle.GhostDark,"ghost-light":type===ButtonStyle.Ghost}}ngOnInit(){super.ngOnInit(),this.href&&(this.external=/^\w+:\/\/.+$/.test(this.href)),this.buttonClasses=ButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small)}ngOnChanges(changes){(changes.buttonStyle||changes.small)&&(this.buttonClasses=ButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small))}onClick(event){this.disabled||this.ngvClick.emit(event)}static#_2=this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ngneat_transloco.Lt]}]},{type:core.ChangeDetectorRef}];static#_3=this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],type:[{type:core.Input}],buttonStyle:[{type:core.Input}],small:[{type:core.Input}],href:[{type:core.Input}],ngvClick:[{type:core.Output}]}};ButtonComponent=ButtonComponent_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-button",template:'<button\n  #input\n  [ngClass]="buttonClasses"\n  [id]="id + \'-button\'"\n  [attr.name]="name"\n  [attr.value]="value"\n  [type]="type"\n  [autofocus]="autofocus"\n  [disabled]="disabled"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type !== \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</button>\n\n<a\n  #input\n  [ngClass]="buttonClasses"\n  role="button"\n  [id]="id + \'-link\'"\n  [routerLink]="href"\n  [external]="external"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type === \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</a>\n\n<ng-template #contentRef>\n  <ng-content></ng-content>\n</ng-template>\n',styles:[button_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],ButtonComponent)},"./libs/angular/src/v-angular/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{P:()=>CheckboxComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var checkbox_componentngResource=__webpack_require__("./libs/angular/src/v-angular/checkbox/checkbox.component.scss?ngResource"),checkbox_componentngResource_default=__webpack_require__.n(checkbox_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ngneat_transloco=__webpack_require__("./node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs"),base_control_value_accessor_component=__webpack_require__("./libs/angular/src/v-angular/base-control-value-accessor/base-control-value-accessor.component.ts");let CheckboxComponent=class CheckboxComponent extends base_control_value_accessor_component.q{constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="checkbox",this.optionalLabel="Optional",this.valueChange=new core.EventEmitter}onInputChange(event){event.stopPropagation(),this.disabled||(this.state=!this.state,this.onTouched(),this.onChange(this.state))}writeValue(value){super.writeValue(value===this.value)}registerOnChange(fn){this.onChange=checked=>{const output=checked?this.value:null;fn(output),this.valueChange.emit(output)}}static#_=this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ngneat_transloco.Lt]}]},{type:core.ChangeDetectorRef}];static#_2=this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],optionalLabel:[{type:core.Input}],valueChange:[{type:core.Output}]}};CheckboxComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-checkbox ngv-checkbox",template:'\x3c!-- LOCKED INPUT --\x3e\n<div *ngIf="locked && state" class="sdv-field-checkbox-wrap">\n  <div\n    [id]="id + \'-checkbox\'"\n    class="ngv-field--locked"\n    [attr.name]="name"\n    [attr.value]="value"\n  >\n    <ng-container *ngIf="!labelContentTpl">\n      {{ label }}\n    </ng-container>\n    <ng-template\n      *ngTemplateOutlet="labelContentTpl ?? null; context: { $implicit: value }"\n    ></ng-template>\n  </div>\n</div>\n\n\x3c!-- INPUT WRAPPER --\x3e\n<ng-container *ngIf="!locked">\n  <div class="sdv-field-checkbox-wrap">\n    \x3c!-- CHECKBOX FIELD --\x3e\n    <label\n      [id]="id + \'-label\'"\n      [attr.for]="id + \'-checkbox\'"\n      class="form-control"\n    >\n      <input\n        #input\n        type="checkbox"\n        [id]="id + \'-checkbox\'"\n        [attr.name]="name"\n        [attr.value]="value"\n        [attr.required]="required"\n        [disabled]="disabled"\n        [autofocus]="autofocus"\n        [attr.aria-label]="description"\n        [checked]="state"\n        (click)="$event.stopPropagation()"\n        (change)="onInputChange($event)"\n        (focus)="onFocus($event)"\n        (blur)="onBlur($event)"\n      />\n      \x3c!-- LABEL --\x3e\n      <ng-template\n        *ngTemplateOutlet="labelContentTpl || basicLabelContentTpl"\n      ></ng-template>\n      <ng-template #basicLabelContentTpl>\n        \x3c!-- to trigger css:empty if no label was added --\x3e\n        <ng-container *ngIf="label">\n          <span\n            *ngIf="\n              optional === true || (required !== true && optional !== false)\n            "\n            class="sdv-field-label--optional"\n          >\n            ({{ optionalLabel }})\n          </span>\n          <span>{{ label }}</span>\n        </ng-container>\n      </ng-template>\n      <i></i>\n    </label>\n  </div>\n\n  \x3c!-- ERRORS --\x3e\n  <ng-container>\n    <label\n      class="sdv-field-notice sdv-field-notice--error"\n      [attr.for]="id + \'-checkbox\'"\n      *ngIf="invalid && (error || ngControl?.invalid)"\n    >\n      <span *ngIf="error; else errorsRef">{{ error }}</span>\n      <ng-template #errorsRef>\n        <span *ngIf="firstError as error">\n          {{ error?.message }}\n        </span>\n      </ng-template>\n    </label>\n  </ng-container>\n\n  \x3c!-- CHILDREN --\x3e\n  <ng-content></ng-content>\n</ng-container>\n',styles:[checkbox_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],CheckboxComponent)},"./libs/angular/src/v-angular/info-circle/info-circle.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Y:()=>InfoCircleComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var info_circle_componentngResource=__webpack_require__("./libs/angular/src/v-angular/info-circle/info-circle.component.scss?ngResource"),info_circle_componentngResource_default=__webpack_require__.n(info_circle_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),chunk_IGJXZGV4=__webpack_require__("./dist/libs/core/src/chunks/chunk.IGJXZGV4.js"),chunk_VOYMQ322=__webpack_require__("./dist/libs/core/src/chunks/chunk.VOYMQ322.js"),chunk_5VURDMKE=__webpack_require__("./dist/libs/core/src/chunks/chunk.5VURDMKE.js"),IconCircleInfo=class extends chunk_IGJXZGV4.M{};IconCircleInfo._regularSVG='<path d="M10.75 11H12L12 16.25M21.25 12C21.25 17.1086 17.1086 21.25 12 21.25C6.89137 21.25 2.75 17.1086 2.75 12C2.75 6.89137 6.89137 2.75 12 2.75C17.1086 2.75 21.25 6.89137 21.25 12Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M11.375 8C11.375 8.34518 11.6548 8.625 12 8.625C12.3452 8.625 12.625 8.34518 12.625 8C12.625 7.65482 12.3452 7.375 12 7.375C11.6548 7.375 11.375 7.65482 11.375 8Z" fill="currentColor" stroke="currentColor" stroke-width="0.25"/>',IconCircleInfo._solidSVG='<path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM10 11C10 10.5858 10.3358 10.25 10.75 10.25H12C12.4142 10.25 12.75 10.5858 12.75 11L12.75 16.25C12.75 16.6642 12.4142 17 12 17C11.5858 17 11.25 16.6642 11.25 16.25L11.25 11.75H10.75C10.3358 11.75 10 11.4142 10 11ZM12 7.25C11.5858 7.25 11.25 7.58579 11.25 8C11.25 8.41421 11.5858 8.75 12 8.75C12.4142 8.75 12.75 8.41421 12.75 8C12.75 7.58579 12.4142 7.25 12 7.25Z" fill="currentColor"/>',IconCircleInfo._name="circle-info",IconCircleInfo=(0,chunk_5VURDMKE.Cc)([(0,chunk_VOYMQ322.Y$)("gds-icon-circle-info")],IconCircleInfo);__webpack_require__("./dist/libs/core/src/chunks/chunk.ZQ4D5K7J.js"),__webpack_require__("./dist/libs/core/src/chunks/chunk.W7CV3QYI.js");let InfoCircleComponent=class InfoCircleComponent{constructor(){this.thook="info"}static#_=this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],info:[{type:core.Input}]}};InfoCircleComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-info-circle",template:'<svg [nggTooltip]="info">\n  <path\n    d="M10.75 11H12L12 16.25M21.25 12C21.25 17.1086 17.1086 21.25 12 21.25C6.89137 21.25 2.75 17.1086 2.75 12C2.75 6.89137 6.89137 2.75 12 2.75C17.1086 2.75 21.25 6.89137 21.25 12Z"\n    stroke="currentColor"\n    stroke-width="1.5"\n    stroke-linecap="round"\n    stroke-linejoin="round"\n    fill="none"\n  />\n  <path\n    d="M11.375 8C11.375 8.34518 11.6548 8.625 12 8.625C12.3452 8.625 12.625 8.34518 12.625 8C12.625 7.65482 12.3452 7.375 12 7.375C11.6548 7.375 11.375 7.65482 11.375 8Z"\n    fill="currentColor"\n    stroke="currentColor"\n    stroke-width="0.25"\n  />\n  <title>{{ label }}</title>\n</svg>\n',styles:[info_circle_componentngResource_default()]})],InfoCircleComponent)},"./dist/libs/core/src/chunks/chunk.5VURDMKE.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Cc:()=>__decorateClass,IA:()=>__spreadValues,OV:()=>__privateSet,S7:()=>__privateGet,VK:()=>__privateAdd,jq:()=>__privateMethod,ko:()=>__spreadProps});var __defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b)),__decorateClass=(decorators,target,key,kind)=>{for(var decorator,result=kind>1?void 0:kind?__getOwnPropDesc(target,key):target,i=decorators.length-1;i>=0;i--)(decorator=decorators[i])&&(result=(kind?decorator(target,key,result):decorator(result))||result);return kind&&result&&__defProp(target,key,result),result},__accessCheck=(obj,member,msg)=>{if(!member.has(obj))throw TypeError("Cannot "+msg)},__privateGet=(obj,member,getter)=>(__accessCheck(obj,member,"read from private field"),getter?getter.call(obj):member.get(obj)),__privateAdd=(obj,member,value)=>{if(member.has(obj))throw TypeError("Cannot add the same private member more than once");member instanceof WeakSet?member.add(obj):member.set(obj,value)},__privateSet=(obj,member,value,setter)=>(__accessCheck(obj,member,"write to private field"),setter?setter.call(obj,value):member.set(obj,value),value),__privateMethod=(obj,member,method)=>(__accessCheck(obj,member,"access private method"),method)},"./dist/libs/core/src/chunks/chunk.IGJXZGV4.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{M:()=>GdsIcon});var _chunk_ZQ4D5K7J_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./dist/libs/core/src/chunks/chunk.ZQ4D5K7J.js"),_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/libs/core/src/chunks/chunk.5VURDMKE.js"),lit__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lit/index.js"),lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit/decorators.js"),lit_directives_unsafe_html_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/lit/directives/unsafe-html.js"),icon_style_default=lit__WEBPACK_IMPORTED_MODULE_2__.AH`
  @layer icon;

  @layer icon {
    :host {
      display: contents;
    }
  }
`,GdsIcon=class extends _chunk_ZQ4D5K7J_js__WEBPACK_IMPORTED_MODULE_0__.j{constructor(){super(...arguments),this.solid=!1,this.box=!1,this.label=""}render(){const isSebIcon="brand-seb"===this.constructor._name,width=isSebIcon?"55":void 0!==this.width?this.width.toString():void 0;let svgContent=`<svg\n      ${width?`width="${width}"`:""}\n      height="${isSebIcon?"24":void 0!==this.height?this.height.toString():"1lh"}"\n      viewBox="${isSebIcon?"0 0 55 24":this.box||"0 0 24 24"}"\n      fill="none"\n      xmlns="http://www.w3.org/2000/svg"\n      ${this.label?`aria-label="${this.label}"`:`aria-label="${this.constructor._name}"`}\n      role="graphics-symbol"\n      part="icon" \n    >\n      ${this.solid?this.constructor._solidSVG:this.constructor._regularSVG}\n    </svg>`;return this.stroke&&(svgContent=svgContent.replace(/<(path|rect|circle|ellipse|line|polyline|polygon)/g,`<$1 stroke-width="${this.stroke}"`)),lit__WEBPACK_IMPORTED_MODULE_2__.qy`${(0,lit_directives_unsafe_html_js__WEBPACK_IMPORTED_MODULE_4__._)(svgContent)}`}};GdsIcon.styles=[icon_style_default],(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_1__.Cc)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.MZ)({type:Number})],GdsIcon.prototype,"width",2),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_1__.Cc)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.MZ)({type:Number})],GdsIcon.prototype,"height",2),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_1__.Cc)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.MZ)({type:Boolean})],GdsIcon.prototype,"solid",2),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_1__.Cc)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.MZ)({type:Number})],GdsIcon.prototype,"stroke",2),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_1__.Cc)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.MZ)({type:String})],GdsIcon.prototype,"box",2),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_1__.Cc)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.MZ)({type:String})],GdsIcon.prototype,"label",2)},"./dist/libs/core/src/chunks/chunk.VOYMQ322.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Eq:()=>getScopedTagName,M:()=>VER_SUFFIX,Y$:()=>gdsCustomElement,qy:()=>html,zu:()=>getUnscopedTagName});var lit__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lit/index.js"),lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lit/decorators.js"),VER_SUFFIX="-13da5a",elementLookupTable=new Map,gdsCustomElement=tagName=>{if(globalThis.GDS_DISABLE_VERSIONED_ELEMENTS)return elementLookupTable.set(tagName,tagName),(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__.EM)(tagName);const versionedTagName=tagName+VER_SUFFIX;return elementLookupTable.set(tagName,versionedTagName),customElements.get(versionedTagName)?_classOrDescriptor=>!1:(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_1__.EM)(versionedTagName)},templateCache=new WeakMap;var replaceTags=inStr=>inStr.map((s=>{for(const[key,value]of elementLookupTable.entries())s=s.replace(new RegExp(`${key}(?![-a-z])`,"mg"),value);return s}));var html=function htmlTemplateTagFactory(extendedTag){return(strings,...values)=>{if(globalThis.GDS_DISABLE_VERSIONED_ELEMENTS)return extendedTag(strings,...values);const[modstrings,...modvalues]=function applyElementScoping(strings,...values){let modstrings=templateCache.get(strings);return modstrings||(modstrings=replaceTags(strings),modstrings.raw=replaceTags(strings.raw),templateCache.set(strings,modstrings)),[modstrings,...values]}(strings,...values);return extendedTag(modstrings,...modvalues)}}(lit__WEBPACK_IMPORTED_MODULE_0__.qy);function getScopedTagName(tagName){var _a;return null!=(_a=elementLookupTable.get(tagName))?_a:tagName}function getUnscopedTagName(tagName){var _a;return null==(_a=[...elementLookupTable.entries()].find((([,value])=>value===tagName)))?void 0:_a[0]}},"./dist/libs/core/src/chunks/chunk.W7CV3QYI.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Q:()=>DynamicStylesController,k:()=>supportsConstructedStylesheets});var _useLegacyStylesheets,_initialStyleSheets,_styleSheets,_legacyStyleSheets,_applyStylesLegacy,applyStylesLegacy_fn,_applyStyles,applyStyles_fn,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./dist/libs/core/src/chunks/chunk.5VURDMKE.js"),DynamicStylesController=class{constructor(host){(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.VK)(this,_applyStylesLegacy),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.VK)(this,_applyStyles),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.VK)(this,_useLegacyStylesheets,!supportsConstructedStylesheets()),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.VK)(this,_initialStyleSheets,[]),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.VK)(this,_styleSheets,new Map),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.VK)(this,_legacyStyleSheets,new Map),this.host=host,this.host.addController(this)}hostConnected(){this.host.shadowRoot&&0===(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_initialStyleSheets).length&&(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.OV)(this,_initialStyleSheets,[...this.host.shadowRoot.adoptedStyleSheets||[]])}inject(key,styles){const cssText=Array.isArray(styles)?styles.map((style=>style.toString())).join(""):styles.toString();(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_useLegacyStylesheets)?(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.jq)(this,_applyStylesLegacy,applyStylesLegacy_fn).call(this,key,cssText):(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.jq)(this,_applyStyles,applyStyles_fn).call(this,key,cssText)}clearAll(){var _a;(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_useLegacyStylesheets)?((0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_legacyStyleSheets).forEach((styleEl=>styleEl.remove())),null==(_a=this.host.shadowRoot)||_a.querySelectorAll("style").forEach((style=>style.innerHTML="")),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_legacyStyleSheets).clear()):this.host.shadowRoot&&(this.host.shadowRoot.adoptedStyleSheets=[],(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_styleSheets).clear(),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.OV)(this,_initialStyleSheets,[]))}};function supportsConstructedStylesheets(){try{return new CSSStyleSheet,!0}catch(e){return!1}}_useLegacyStylesheets=new WeakMap,_initialStyleSheets=new WeakMap,_styleSheets=new WeakMap,_legacyStyleSheets=new WeakMap,_applyStylesLegacy=new WeakSet,applyStylesLegacy_fn=function(key,cssText){var _a;let styleEl=(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_legacyStyleSheets).get(key);styleEl||(styleEl=document.createElement("style"),(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_legacyStyleSheets).set(key,styleEl)),styleEl.textContent=cssText,null==(_a=this.host.shadowRoot)||_a.appendChild(styleEl)},_applyStyles=new WeakSet,applyStyles_fn=function(key,cssText){if(!this.host.shadowRoot)return;let styleSheet=(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_styleSheets).get(key);styleSheet||(styleSheet=new CSSStyleSheet,(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_styleSheets).set(key,styleSheet)),styleSheet.replaceSync(cssText),this.host.shadowRoot.adoptedStyleSheets=[...(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_initialStyleSheets),...Array.from((0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_0__.S7)(this,_styleSheets).values())]}},"./dist/libs/core/src/chunks/chunk.ZQ4D5K7J.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{j:()=>GdsElement});var _chunk_W7CV3QYI_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./dist/libs/core/src/chunks/chunk.W7CV3QYI.js"),_chunk_VOYMQ322_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/libs/core/src/chunks/chunk.VOYMQ322.js"),_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/libs/core/src/chunks/chunk.5VURDMKE.js"),lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lit/decorators.js"),lit__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/lit/index.js"),GdsElement=(__webpack_require__("./node_modules/reflect-metadata/Reflect.js"),class extends lit__WEBPACK_IMPORTED_MODULE_4__.WF{constructor(){super(),this.gdsElementName="",this._isUsingTransitionalStyles=!1,this._dynamicStylesController=new _chunk_W7CV3QYI_js__WEBPACK_IMPORTED_MODULE_0__.Q(this)}connectedCallback(){super.connectedCallback(),this.gdsElementName=(0,_chunk_VOYMQ322_js__WEBPACK_IMPORTED_MODULE_1__.zu)(this.tagName.toLowerCase())||this.gdsElementName,this.setAttribute("gds-element",this.gdsElementName)}});(0,_chunk_5VURDMKE_js__WEBPACK_IMPORTED_MODULE_2__.Cc)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.wk)()],GdsElement.prototype,"_isUsingTransitionalStyles",2)},"./libs/angular/src/v-angular/input/input.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,WithCustomError:()=>WithCustomError,WithCustomErrorAndCountdown:()=>WithCustomErrorAndCountdown,WithCustomLabel:()=>WithCustomLabel,WithDisplayDisabledAsLocked:()=>WithDisplayDisabledAsLocked,WithFormControl:()=>WithFormControl,WithInputMask:()=>WithInputMask,WithLockedInput:()=>WithLockedInput,WithMaxLength:()=>WithMaxLength,WithPrefixAndOrSuffix:()=>WithPrefixAndOrSuffix,WithResetObservable:()=>WithResetObservable,WithTypeAhead:()=>WithTypeAhead,__namedExportsOrder:()=>__namedExportsOrder,default:()=>input_stories}),"undefined"==typeof window||window.ngv||(window.ngv={ids:{default:-1},nextId(namespace="default"){let id=this.ids[namespace]||0;return"number"==typeof this.ids[namespace]&&id++,this.ids[namespace]=id,"default"===namespace?`ngv-${id}`:`ngv-${namespace}-${id}`}});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),testing=__webpack_require__("./node_modules/@angular/router/fesm2022/testing.mjs"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),observable_of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),ngneat_transloco=__webpack_require__("./node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs"),i18n_module=__webpack_require__("./libs/angular/src/v-angular/i18n/i18n.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),inputmask=__webpack_require__("./node_modules/inputmask/dist/inputmask.js"),inputmask_default=__webpack_require__.n(inputmask);const InputmaskStatic=inputmask_default().default||inputmask_default();let InputMaskFormatPipe=class InputMaskFormatPipe{transform(value,options){return value?InputmaskStatic.format(value,options):value}};InputMaskFormatPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"ngvInputMaskFormat"})],InputMaskFormatPipe);class InputMaskConfig{constructor(){this.isAsync=!1,this.inputSelector="input"}}const INPUT_MASK_CONFIG=new core.InjectionToken("InputMaskConfig"),InputmaskConstructor=inputmask_default().default||inputmask_default();let InputMaskDirective=class InputMaskDirective{constructor(ngControl,config,platformId,elementRef,renderer,ngZone){this.ngControl=ngControl,this.platformId=platformId,this.elementRef=elementRef,this.renderer=renderer,this.ngZone=ngZone,this.ngvInputMask={},this.defaultInputMaskConfig=new InputMaskConfig,this.onInput=_=>{},this.onTouched=_=>{},this.validate=control=>control.value&&this.inputMaskPlugin&&!this.inputMaskPlugin.isValid()?{invalidformat:!0}:null,this.ngControl&&(this.ngControl.valueAccessor=this),this.setNativeInputElement(config)}onKeyUp(event){["Delete","Backspace"].includes(event.key)&&this.elementRef.nativeElement.dispatchEvent(new Event("input",{bubbles:!0,cancelable:!0}))}ngOnInit(){this.control&&(this.control.setValidators(this.control.validator?[this.control.validator,this.validate]:[this.validate]),this.control.updateValueAndValidity())}ngOnDestroy(){this.inputMaskPlugin?.remove(),this.mutationObserver?.disconnect()}initInputMask(){!(0,common.isPlatformServer)(this.platformId)&&this.nativeInputElement&&Object.keys(this.ngvInputMask).length&&(this.inputMaskPlugin=this.ngZone.runOutsideAngular((()=>new InputmaskConstructor(this.inputMaskOptions).mask(this.nativeInputElement))),this.control&&setTimeout((()=>{this.control.updateValueAndValidity()})))}ngAfterViewInit(){this.initInputMask()}get inputMaskOptions(){const{parser,...options}=this.ngvInputMask;return options}writeValue(value){this.nativeInputElement&&this.renderer.setProperty(this.nativeInputElement,"value",value??"")}registerOnChange(fn){this.onInput=value=>{const parser=this.ngvInputMask?.parser,newValue=parser&&value?parser(value):value;fn(newValue)}}registerOnTouched(fn){this.onTouched=fn}setDisabledState(disabled){this.nativeInputElement&&this.renderer.setProperty(this.nativeInputElement,"disabled",disabled)}get control(){return this.ngControl?.control}setNativeInputElement(config){"INPUT"===this.elementRef.nativeElement.tagName?this.nativeInputElement=this.elementRef.nativeElement:(this.defaultInputMaskConfig={...this.defaultInputMaskConfig,...config},this.defaultInputMaskConfig.isAsync?(this.mutationObserver=new MutationObserver((mutationsList=>{for(const mutation of mutationsList)if("childList"===mutation.type){const nativeInputElement=this.elementRef.nativeElement.querySelector(this.defaultInputMaskConfig.inputSelector);nativeInputElement&&(this.nativeInputElement=nativeInputElement,this.mutationObserver?.disconnect(),this.initInputMask())}})),this.mutationObserver.observe(this.elementRef.nativeElement,{childList:!0,subtree:!0})):this.nativeInputElement=this.elementRef.nativeElement.querySelector(this.defaultInputMaskConfig.inputSelector))}static#_=this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Optional},{type:core.Self}]},{type:InputMaskConfig,decorators:[{type:core.Inject,args:[INPUT_MASK_CONFIG]}]},{type:String,decorators:[{type:core.Inject,args:[core.PLATFORM_ID]}]},{type:core.ElementRef},{type:core.Renderer2},{type:core.NgZone}];static#_2=this.propDecorators={ngvInputMask:[{type:core.Input}],onInput:[{type:core.HostListener,args:["input",["$event.target.value"]]}],onTouched:[{type:core.HostListener,args:["blur",["$event.target.value"]]}],onKeyUp:[{type:core.HostListener,args:["keyup",["$event"]]}]}};var NgvInputMaskModule_1;InputMaskDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[ngvInputMask]"}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,InputMaskConfig,String,core.ElementRef,core.Renderer2,core.NgZone])],InputMaskDirective);let NgvInputMaskModule=NgvInputMaskModule_1=class NgvInputMaskModule{static forRoot(config){return{ngModule:NgvInputMaskModule_1,providers:[{provide:INPUT_MASK_CONFIG,useValue:config}]}}};NgvInputMaskModule=NgvInputMaskModule_1=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[InputMaskDirective,InputMaskFormatPipe],exports:[InputMaskDirective,InputMaskFormatPipe],providers:[{provide:INPUT_MASK_CONFIG,useClass:InputMaskConfig}]})],NgvInputMaskModule);const createMask=options=>"string"==typeof options?{mask:options}:options;var tooltip_directive=__webpack_require__("./libs/angular/src/v-angular/tooltip/tooltip.directive.ts"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),button_component=__webpack_require__("./libs/angular/src/v-angular/button/button.component.ts"),character_countdown_directive=__webpack_require__("./libs/angular/src/lib/shared/character-countdown/character-countdown.directive.ts"),checkbox_component=__webpack_require__("./libs/angular/src/v-angular/checkbox/checkbox.component.ts"),core_utils=__webpack_require__("./libs/angular/src/v-angular/core.utils.ts"),dropdown_list_component=__webpack_require__("./libs/angular/src/v-angular/dropdown-list/dropdown-list.component.ts"),dropdown_component=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown.component.ts"),external_link_directive=__webpack_require__("./libs/angular/src/lib/shared/external-link/external-link.directive.ts"),info_circle_component=__webpack_require__("./libs/angular/src/v-angular/info-circle/info-circle.component.ts"),typeahead_dropdown_list_component=__webpack_require__("./libs/angular/src/v-angular/typeahead/typeahead-dropdown-list/typeahead-dropdown-list.component.ts"),typeahead_directive=__webpack_require__("./libs/angular/src/v-angular/typeahead/typeahead.directive.ts"),input_component=__webpack_require__("./libs/angular/src/v-angular/input/input.component.ts");let translocoServiceInstance;const input_stories={title:"V-Angular/Input",component:input_component.S,decorators:[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(i18n_module.g),{provide:core.APP_INITIALIZER,useFactory:function translocoStorybookInitializer(translocoService){return()=>{translocoServiceInstance=translocoService,translocoService.langChanges$.pipe((0,distinctUntilChanged.F)()).subscribe()}},multi:!0,deps:[ngneat_transloco.JO]},core_utils.z]}),(0,dist.moduleMetadata)({declarations:[button_component.Q,dropdown_component.P,dropdown_list_component.d,typeahead_dropdown_list_component.w,checkbox_component.P,tooltip_directive.d,info_circle_component.Y,character_countdown_directive.q,external_link_directive.V],imports:[typeahead_directive.X,common.CommonModule,fesm2022_forms.X1,testing.c1,NgvInputMaskModule.forRoot({inputSelector:"input",isAsync:!0}),ngneat_transloco.Q8]})]},Template=args=>({props:args}),TemplateWithFormControl=args=>{const ctrl=new fesm2022_forms.hs(args.ngModel,[fesm2022_forms.k0.required,fesm2022_forms.k0.maxLength(12)]);ctrl.valueChanges.subscribe((val=>{console.log("input control value:",val),console.log({required:required()})}));const required=()=>{const error=ctrl.validator&&ctrl.validator({});return error&&error.required};return{template:'\n    <ngg-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl">\n    </ngg-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    ',props:{...args,formControl:ctrl,disableFn:()=>{if(ctrl.disabled)return ctrl.enable();ctrl.disable()}}}},Primary=Template.bind({});Primary.args={label:"Field label",placeholder:"This is a placeholder value",ngModel:"textual value",description:"This is a field description",type:"text",autocomplete:"on",required:void 0,optional:!1,disabled:!1,invalid:!1};const WithFormControl=TemplateWithFormControl.bind({});WithFormControl.args={...Primary.args,invalid:void 0,required:void 0,optional:void 0,valid:void 0};const TemplateWithError=args=>({props:{...args}}),WithCustomErrorAndCountdown=TemplateWithError.bind({});WithCustomErrorAndCountdown.args={...Primary.args,maxlength:25,showCharacterCountdown:!0,invalid:!0,error:"this is an error message",badgeText:"SEB"};const WithCustomError=TemplateWithError.bind({});WithCustomError.args={...Primary.args,invalid:!0,error:"Validation failed on server"};const WithCustomLabel=(args=>({template:'\n    <ngg-input [label]="label"\n      [disabled]="disabled"\n      [invalid]="invalid"\n      [required]="required">\n      <ng-template #labelTpl>\n        <i>{{ customLabelText }}</i>\n        <ngv-info-circle [info]="info"></ngv-info-circle>\n        <span>{{ text }}</span>\n      </ng-template>\n    </ngg-input>',props:args})).bind({});WithCustomLabel.args={...Primary.args,info:"Some info regarding the input maybe...",text:"And some more text"};const resetObservable$=new Observable.c((subscriber=>{setInterval((()=>{subscriber.next()}),3e3)})),WithPrefixAndOrSuffix=(args=>({styles:[".suffix-prefix-padding{ padding: 0.75em }"],template:'\n  <h2>Prefix and/or suffix</h2>\n  <p>\n    Prefix and/or suffix demontrations with simple HTML-elements and with other components.\n  </p>\n  <hr>\n  <ngg-input label="Default"\n    type="text"\n    description="Default"\n    [invalid]="invalid">\n  </ngg-input>\n  <ngg-input label="Prefix"\n    type="text"\n    description="Prefix with checkbox"\n    [invalid]="invalid">\n    <ngv-checkbox\n      slot="prefix"\n      label="Selected"\n      [value]="true">\n    </ngv-checkbox>\n  </ngg-input>\n\n  <ngg-input label="Suffix"\n    type="text"\n    description="Suffix with simple text"\n    [invalid]="invalid">\n    <label slot="suffix" class="suffix-prefix-padding">SEB</label>\n  </ngg-input>\n\n  <ngg-input label="Default (suffix)"\n    type="text"\n    description="Suffix (default placement) with button"\n    [invalid]="invalid">\n    <ngv-button\n      class="suffix-prefix-padding"\n      [small]="true"\n      type="button">\n      SAVE\n    </ngv-button>\n  </ngg-input>\n\n  <ngg-input label="Large button with no padding (suffix)"\n  type="text"\n  description="Suffix (default placement) with button without padding"\n  [invalid]="invalid">\n  <ngv-button\n  class="integrated-btn"\n    [small]="false"\n    type="button"\n    [buttonStyle]="2">\n    x\n  </ngv-button>\n</ngg-input>\n\n  <ngg-input label="Prefix and default (suffix)"\n    type="number"\n    description="Prefix with simple label and suffix (default) with dropdown"\n    [invalid]="invalid">\n    <label slot="prefix" class="suffix-prefix-padding">Amount:</label>\n    <ngv-dropdown\n      placeholder="Currency"\n      [options]="[\n        { key: \'eur\', label: \'EUR\' },\n        { key: \'sek\', label: \'SEK\' },\n        { key: \'usd\', label: \'USD\' }\n      ]">\n    </ngv-dropdown>\n  </ngg-input>',props:args})).bind({});WithPrefixAndOrSuffix.args={...Primary.args,invalid:!1};const WithResetObservable=_args=>({template:'\n    <ng-container [formGroup]="formGroup">\n      <ngg-input label="Reset demo"\n        type="text"\n        formControlName="resetForm"\n        [description]="description"\n        [defaultValue]="defaultValue"\n        [reset]="resetObservable$">\n      </ngg-input>\n    </ng-container>',props:{description:"I will reset every 3000ms",formGroup:new fesm2022_forms.J3({resetForm:new fesm2022_forms.hs("Annoying orange")}),resetObservable$}}),WithMaxLength=args=>{let formGroup=new fesm2022_forms.J3({remittanceInformation:new fesm2022_forms.hs("This is a test of handling if the text is longer than the max length input",fesm2022_forms.k0.maxLength(9))});const maxLength$=(0,observable_of.of)(10);formGroup.get("remittanceInformation")?.valueChanges.subscribe((val=>console.log(val)));return{template:'\n    <button (click)="show = !show">Toggle show/hide</button>\n    <button (click)="toggleLang()">Toggle lang</button>\n    <button (click)="setValue(\'another long value\')">Set form value</button>\n    <ng-container [formGroup]="formG">\n      <ngg-input *ngIf="show"\n        [label]="label"\n        [invalid]="invalid"\n        [maxLength]="maxLength$ | async"\n        formControlName="remittanceInformation"\n        >\n        <ng-template #labelTpl>\n          <i>{{ customLabelText }}</i>\n          <ngv-info-circle [info]="info"></ngv-info-circle>\n          <span>{{ text }}</span>\n        </ng-template>\n      </ngg-input>\n      <span>value: {{ formG.controls.remittanceInformation.value }}</span>\n    </ng-container>',props:{...args,description:"This is a field description",maxLength$,formG:formGroup,setValue:value=>formGroup.controls.remittanceInformation.setValue(value),toggleLang:()=>(()=>{const updateLang="sv"===translocoServiceInstance.getActiveLang()?"en":"sv";console.log("from:",translocoServiceInstance.getActiveLang(),"=>",updateLang),translocoServiceInstance.setActiveLang(updateLang)})(),show:!1}}};let dateFCValue="",emailFCValue="",currencyFCValue="",phoneFCValue="",licenseFCValue="",ipFCValue="";const WithInputMask=(args=>{const dateFC=new fesm2022_forms.hs(dateFCValue,[fesm2022_forms.k0.required]),emailFC=new fesm2022_forms.hs(emailFCValue),currencyFC=new fesm2022_forms.hs(currencyFCValue),phoneFC=new fesm2022_forms.hs(phoneFCValue),licenseFC=new fesm2022_forms.hs(licenseFCValue),ipFC=new fesm2022_forms.hs(ipFCValue),formGroup=new fesm2022_forms.J3({dateFC,emailFC,currencyFC,phoneFC,licenseFC,ipFC});dateFC?.valueChanges.subscribe((val=>dateFCValue=val)),emailFC?.valueChanges.subscribe((val=>emailFCValue=val)),currencyFC?.valueChanges.subscribe((val=>currencyFCValue=val)),phoneFC?.valueChanges.subscribe((val=>phoneFCValue=val)),licenseFC?.valueChanges.subscribe((val=>licenseFCValue=val)),ipFC?.valueChanges.subscribe((val=>ipFCValue=val));const dateInputMask=createMask({alias:"datetime",inputFormat:"yyyy-mm-dd",parser:value=>{const values=value.split("-"),year=+values[0],month=+values[1]-1,day=+values[2];return new Date(year,month,day)}}),emailInputMask=createMask({alias:"email"}),currencyInputMask=createMask({alias:"numeric",groupSeparator:",",digits:2,digitsOptional:!1,prefix:"$ ",placeholder:"0",shortcuts:null}),phoneMask=createMask("(999) 999-9999");return{template:'\n    <div class="container" [formGroup]="formGroup">\n      <div class="row">\n        <div class="column">\n          <h2>Date</h2>\n          <ngg-input\n            [inputMask]="dateInputMask"\n            formControlName="dateFC"\n            placeholder="yyyy-mm-dd"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.dateFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.dateFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.dateFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>E-mail</h2>\n          <ngg-input\n            [inputMask]="emailInputMask"\n            formControlName="emailFC"\n            placeholder="_@_._"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.emailFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.emailFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.emailFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>Currency</h2>\n          <ngg-input\n            [inputMask]="currencyInputMask"\n            formControlName="currencyFC"\n            placeholder="$ 0.00"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.currencyFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.currencyFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.currencyFC.errors | json }} </div>\n        </div>\n      </div>\n\n      <div class="row">\n        <div class="column">\n          <h2>Phone</h2>\n          <ngg-input\n            [inputMask]="phoneMask"\n            formControlName="phoneFC"\n            placeholder="(___) ___-____"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.phoneFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.phoneFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.phoneFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>License</h2>\n          <ngg-input\n            [inputMask]="licenseInputMask"\n            formControlName="licenseFC"\n            placeholder="___-___"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.licenseFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.licenseFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.licenseFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>IP address</h2>\n          <ngg-input\n            [inputMask]="ipAddressMask"\n            formControlName="ipFC"\n            placeholder="_._._._"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.ipFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.ipFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.ipFC.errors }} </div>\n        </div>\n      </div>\n    </div>\n    ',styles:['\n      * {\n        box-sizing: border-box;\n        width: 100%;\n      }\n\n      .column {\n        float: left;\n        width: 33.33%;\n        padding: 16px;\n        min-height: 150px;\n        max-height: 250px;\n      }\n      \n      .row:after {\n        content: "";\n        display: table;\n        clear: both;\n      }\n    '],props:{formGroup,dateInputMask,emailInputMask,licenseInputMask:createMask("[9-]AAA-999"),currencyInputMask,ipAddressMask:createMask({alias:"ip"}),phoneMask,locked:args.locked}}}).bind({});WithInputMask.args={locked:!1};const WithLockedInput=Template.bind({});WithLockedInput.args={...Primary.args,locked:!0,description:void 0,label:"Bank charges"};const WithDisplayDisabledAsLocked=TemplateWithFormControl.bind({});WithDisplayDisabledAsLocked.args={...Primary.args,invalid:void 0,required:void 0,optional:void 0,valid:void 0,locked:!1,description:void 0,label:"Bank charges",displayDisabledAsLocked:!0};const WithTypeAhead=(args=>{const options=[{key:"hej",label:"Hej"},{key:"tja",label:"Tja"},{key:"hejsan",label:"Hejsan"},{key:"tjo",label:"Tjo"},{key:"tjena",label:"Tjena"}];return{template:'\n      <ngg-input class="toggle"\n        [label]="label"\n        [ngvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [autocomplete]="\'off\'">\n      </ngg-input>\n    ',styles:["\n      ngv-dropdown-list {\n        width: 100%;\n      }\n    "],props:{...args,searchFunction:value$=>value$.pipe((0,debounceTime.B)(100),(0,tap.M)((x=>console.log("entered value in input: ",x))),(0,map.T)((inputValue=>options.filter((option=>option.key.toUpperCase().includes(inputValue.toUpperCase())))))),selectedFormatter:value=>value.label.toUpperCase()}}}).bind({});WithTypeAhead.args={...Primary.args},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"(args: InputComponent & WithExtras) => ({\n  props: args\n})",...Primary.parameters?.docs?.source}}},WithFormControl.parameters={...WithFormControl.parameters,docs:{...WithFormControl.parameters?.docs,source:{originalSource:'(args: InputComponent & WithExtras) => {\n  const ctrl = new UntypedFormControl(args.ngModel, [Validators.required, Validators.maxLength(12)]);\n  ctrl.valueChanges.subscribe(val => {\n    console.log(\'input control value:\', val);\n    console.log({\n      required: required()\n    });\n  });\n  const toggleDisableField = () => {\n    if (!!ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  const required = () => {\n    const error = ctrl.validator && ctrl.validator(({} as AbstractControl));\n    return error && error.required;\n  };\n  return {\n    template: /*html*/`\n    <ngg-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl">\n    </ngg-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    `,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithFormControl.parameters?.docs?.source}}},WithCustomErrorAndCountdown.parameters={...WithCustomErrorAndCountdown.parameters,docs:{...WithCustomErrorAndCountdown.parameters?.docs,source:{originalSource:"(args: InputComponent & WithExtras) => ({\n  props: {\n    ...args\n  }\n})",...WithCustomErrorAndCountdown.parameters?.docs?.source}}},WithCustomError.parameters={...WithCustomError.parameters,docs:{...WithCustomError.parameters?.docs,source:{originalSource:"(args: InputComponent & WithExtras) => ({\n  props: {\n    ...args\n  }\n})",...WithCustomError.parameters?.docs?.source}}},WithCustomLabel.parameters={...WithCustomLabel.parameters,docs:{...WithCustomLabel.parameters?.docs,source:{originalSource:'(args: InputComponent & WithExtras) => ({\n  template: /*html*/`\n    <ngg-input [label]="label"\n      [disabled]="disabled"\n      [invalid]="invalid"\n      [required]="required">\n      <ng-template #labelTpl>\n        <i>{{ customLabelText }}</i>\n        <ngv-info-circle [info]="info"></ngv-info-circle>\n        <span>{{ text }}</span>\n      </ng-template>\n    </ngg-input>`,\n  props: args\n})',...WithCustomLabel.parameters?.docs?.source}}},WithPrefixAndOrSuffix.parameters={...WithPrefixAndOrSuffix.parameters,docs:{...WithPrefixAndOrSuffix.parameters?.docs,source:{originalSource:'(args: InputComponent & WithExtras & any) => ({\n  styles: [`.suffix-prefix-padding{ padding: 0.75em }`],\n  template: /*html*/`\n  <h2>Prefix and/or suffix</h2>\n  <p>\n    Prefix and/or suffix demontrations with simple HTML-elements and with other components.\n  </p>\n  <hr>\n  <ngg-input label="Default"\n    type="text"\n    description="Default"\n    [invalid]="invalid">\n  </ngg-input>\n  <ngg-input label="Prefix"\n    type="text"\n    description="Prefix with checkbox"\n    [invalid]="invalid">\n    <ngv-checkbox\n      slot="prefix"\n      label="Selected"\n      [value]="true">\n    </ngv-checkbox>\n  </ngg-input>\n\n  <ngg-input label="Suffix"\n    type="text"\n    description="Suffix with simple text"\n    [invalid]="invalid">\n    <label slot="suffix" class="suffix-prefix-padding">SEB</label>\n  </ngg-input>\n\n  <ngg-input label="Default (suffix)"\n    type="text"\n    description="Suffix (default placement) with button"\n    [invalid]="invalid">\n    <ngv-button\n      class="suffix-prefix-padding"\n      [small]="true"\n      type="button">\n      SAVE\n    </ngv-button>\n  </ngg-input>\n\n  <ngg-input label="Large button with no padding (suffix)"\n  type="text"\n  description="Suffix (default placement) with button without padding"\n  [invalid]="invalid">\n  <ngv-button\n  class="integrated-btn"\n    [small]="false"\n    type="button"\n    [buttonStyle]="2">\n    x\n  </ngv-button>\n</ngg-input>\n\n  <ngg-input label="Prefix and default (suffix)"\n    type="number"\n    description="Prefix with simple label and suffix (default) with dropdown"\n    [invalid]="invalid">\n    <label slot="prefix" class="suffix-prefix-padding">Amount:</label>\n    <ngv-dropdown\n      placeholder="Currency"\n      [options]="[\n        { key: \'eur\', label: \'EUR\' },\n        { key: \'sek\', label: \'SEK\' },\n        { key: \'usd\', label: \'USD\' }\n      ]">\n    </ngv-dropdown>\n  </ngg-input>`,\n  props: args\n})',...WithPrefixAndOrSuffix.parameters?.docs?.source}}},WithResetObservable.parameters={...WithResetObservable.parameters,docs:{...WithResetObservable.parameters?.docs,source:{originalSource:'(_args: InputComponent & WithExtras & any) => {\n  const formGroup = new UntypedFormGroup({\n    resetForm: new UntypedFormControl(\'Annoying orange\')\n  });\n  return {\n    template: /*html*/`\n    <ng-container [formGroup]="formGroup">\n      <ngg-input label="Reset demo"\n        type="text"\n        formControlName="resetForm"\n        [description]="description"\n        [defaultValue]="defaultValue"\n        [reset]="resetObservable$">\n      </ngg-input>\n    </ng-container>`,\n    props: {\n      description: `I will reset every ${resettime}ms`,\n      formGroup,\n      resetObservable$\n    }\n  };\n}',...WithResetObservable.parameters?.docs?.source}}},WithMaxLength.parameters={...WithMaxLength.parameters,docs:{...WithMaxLength.parameters?.docs,source:{originalSource:'(args: InputComponent & WithExtras & any) => {\n  let formGroup = new UntypedFormGroup({\n    remittanceInformation: new UntypedFormControl(\'This is a test of handling if the text is longer than the max length input\', Validators.maxLength(9))\n  });\n  const maxLength$ = of(10);\n  formGroup.get(\'remittanceInformation\')?.valueChanges.subscribe(val => console.log(val));\n  const toggleLang = () => {\n    const updateLang = translocoServiceInstance.getActiveLang() === \'sv\' ? \'en\' : \'sv\';\n    console.log(\'from:\', translocoServiceInstance.getActiveLang(), \'=>\', updateLang);\n    translocoServiceInstance.setActiveLang(updateLang);\n  };\n  return {\n    template: /*html*/`\n    <button (click)="show = !show">Toggle show/hide</button>\n    <button (click)="toggleLang()">Toggle lang</button>\n    <button (click)="setValue(\'another long value\')">Set form value</button>\n    <ng-container [formGroup]="formG">\n      <ngg-input *ngIf="show"\n        [label]="label"\n        [invalid]="invalid"\n        [maxLength]="maxLength$ | async"\n        formControlName="remittanceInformation"\n        >\n        <ng-template #labelTpl>\n          <i>{{ customLabelText }}</i>\n          <ngv-info-circle [info]="info"></ngv-info-circle>\n          <span>{{ text }}</span>\n        </ng-template>\n      </ngg-input>\n      <span>value: {{ formG.controls.remittanceInformation.value }}</span>\n    </ng-container>`,\n    props: {\n      ...args,\n      description: \'This is a field description\',\n      maxLength$: maxLength$,\n      formG: formGroup,\n      setValue: (value: any) => formGroup.controls.remittanceInformation.setValue(value),\n      toggleLang: () => toggleLang(),\n      show: false\n    }\n  };\n}',...WithMaxLength.parameters?.docs?.source}}},WithInputMask.parameters={...WithInputMask.parameters,docs:{...WithInputMask.parameters?.docs,source:{originalSource:'(args: InputComponent & WithExtras & any) => {\n  const dateFC = new UntypedFormControl(dateFCValue, [Validators.required]);\n  const emailFC = new UntypedFormControl(emailFCValue);\n  const currencyFC = new UntypedFormControl(currencyFCValue);\n  const phoneFC = new UntypedFormControl(phoneFCValue);\n  const licenseFC = new UntypedFormControl(licenseFCValue);\n  const ipFC = new UntypedFormControl(ipFCValue);\n  const formGroup = new UntypedFormGroup({\n    dateFC,\n    emailFC,\n    currencyFC,\n    phoneFC,\n    licenseFC,\n    ipFC\n  });\n  dateFC?.valueChanges.subscribe(val => dateFCValue = val);\n  emailFC?.valueChanges.subscribe(val => emailFCValue = val);\n  currencyFC?.valueChanges.subscribe(val => currencyFCValue = val);\n  phoneFC?.valueChanges.subscribe(val => phoneFCValue = val);\n  licenseFC?.valueChanges.subscribe(val => licenseFCValue = val);\n  ipFC?.valueChanges.subscribe(val => ipFCValue = val);\n  const dateInputMask = createMask<Date>({\n    alias: \'datetime\',\n    inputFormat: \'yyyy-mm-dd\',\n    parser: (value: string) => {\n      const values = value.split(\'-\');\n      const year = +values[0];\n      const month = +values[1] - 1;\n      const day = +values[2];\n      return new Date(year, month, day);\n    }\n  });\n  const emailInputMask = createMask({\n    alias: \'email\'\n  });\n  const currencyInputMask = createMask({\n    alias: \'numeric\',\n    groupSeparator: \',\',\n    digits: 2,\n    digitsOptional: false,\n    prefix: \'$ \',\n    placeholder: \'0\',\n    shortcuts: null\n  });\n  const phoneMask = createMask(\'(999) 999-9999\');\n  const licenseInputMask = createMask(\'[9-]AAA-999\');\n  const ipAddressMask = createMask({\n    alias: \'ip\'\n  });\n  return {\n    template: /*html*/`\n    <div class="container" [formGroup]="formGroup">\n      <div class="row">\n        <div class="column">\n          <h2>Date</h2>\n          <ngg-input\n            [inputMask]="dateInputMask"\n            formControlName="dateFC"\n            placeholder="yyyy-mm-dd"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.dateFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.dateFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.dateFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>E-mail</h2>\n          <ngg-input\n            [inputMask]="emailInputMask"\n            formControlName="emailFC"\n            placeholder="_@_._"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.emailFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.emailFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.emailFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>Currency</h2>\n          <ngg-input\n            [inputMask]="currencyInputMask"\n            formControlName="currencyFC"\n            placeholder="$ 0.00"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.currencyFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.currencyFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.currencyFC.errors | json }} </div>\n        </div>\n      </div>\n\n      <div class="row">\n        <div class="column">\n          <h2>Phone</h2>\n          <ngg-input\n            [inputMask]="phoneMask"\n            formControlName="phoneFC"\n            placeholder="(___) ___-____"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.phoneFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.phoneFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.phoneFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>License</h2>\n          <ngg-input\n            [inputMask]="licenseInputMask"\n            formControlName="licenseFC"\n            placeholder="___-___"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.licenseFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.licenseFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.licenseFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>IP address</h2>\n          <ngg-input\n            [inputMask]="ipAddressMask"\n            formControlName="ipFC"\n            placeholder="_._._._"\n            [locked]="locked">\n          </ngg-input>\n          <div> Valid: {{ formGroup.controls.ipFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.ipFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.ipFC.errors }} </div>\n        </div>\n      </div>\n    </div>\n    `,\n    styles: [/*css*/`\n      * {\n        box-sizing: border-box;\n        width: 100%;\n      }\n\n      .column {\n        float: left;\n        width: 33.33%;\n        padding: 16px;\n        min-height: 150px;\n        max-height: 250px;\n      }\n      \n      .row:after {\n        content: "";\n        display: table;\n        clear: both;\n      }\n    `],\n    props: {\n      formGroup,\n      dateInputMask,\n      emailInputMask,\n      licenseInputMask,\n      currencyInputMask,\n      ipAddressMask,\n      phoneMask,\n      locked: args.locked\n    }\n  };\n}',...WithInputMask.parameters?.docs?.source}}},WithLockedInput.parameters={...WithLockedInput.parameters,docs:{...WithLockedInput.parameters?.docs,source:{originalSource:"(args: InputComponent & WithExtras) => ({\n  props: args\n})",...WithLockedInput.parameters?.docs?.source}}},WithDisplayDisabledAsLocked.parameters={...WithDisplayDisabledAsLocked.parameters,docs:{...WithDisplayDisabledAsLocked.parameters?.docs,source:{originalSource:'(args: InputComponent & WithExtras) => {\n  const ctrl = new UntypedFormControl(args.ngModel, [Validators.required, Validators.maxLength(12)]);\n  ctrl.valueChanges.subscribe(val => {\n    console.log(\'input control value:\', val);\n    console.log({\n      required: required()\n    });\n  });\n  const toggleDisableField = () => {\n    if (!!ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  const required = () => {\n    const error = ctrl.validator && ctrl.validator(({} as AbstractControl));\n    return error && error.required;\n  };\n  return {\n    template: /*html*/`\n    <ngg-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl">\n    </ngg-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    `,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithDisplayDisabledAsLocked.parameters?.docs?.source}}},WithTypeAhead.parameters={...WithTypeAhead.parameters,docs:{...WithTypeAhead.parameters?.docs,source:{originalSource:"(args: InputComponent & WithExtras) => {\n  const options = [{\n    key: 'hej',\n    label: 'Hej'\n  }, {\n    key: 'tja',\n    label: 'Tja'\n  }, {\n    key: 'hejsan',\n    label: 'Hejsan'\n  }, {\n    key: 'tjo',\n    label: 'Tjo'\n  }, {\n    key: 'tjena',\n    label: 'Tjena'\n  }];\n  const searchFunction = (value$: Observable<string>) => value$.pipe(debounceTime(100), tap(x => console.log('entered value in input: ', x)), map(inputValue => options.filter(option => option.key.toUpperCase().includes(inputValue.toUpperCase()))));\n  return {\n    template: /*html*/`\n      <ngg-input class=\"toggle\"\n        [label]=\"label\"\n        [ngvTypeahead]=\"searchFunction\"\n        [resultFormatter]=\"resultFormatter\"\n        [selectedFormatter]=\"selectedFormatter\"\n        [autocomplete]=\"'off'\">\n      </ngg-input>\n    `,\n    styles: [/*css*/`\n      ngv-dropdown-list {\n        width: 100%;\n      }\n    `],\n    props: {\n      ...args,\n      searchFunction: searchFunction,\n      selectedFormatter: (value: {\n        key: string;\n        label: string;\n      }) => value.label.toUpperCase()\n    }\n  };\n}",...WithTypeAhead.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","WithFormControl","WithCustomErrorAndCountdown","WithCustomError","WithCustomLabel","WithPrefixAndOrSuffix","WithResetObservable","WithMaxLength","WithInputMask","WithLockedInput","WithDisplayDisabledAsLocked","WithTypeAhead"]},"./libs/angular/src/v-angular/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n:host button,\n:host a {\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  font-family: inherit;\n  padding: 0;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  border-radius: var(--sg-border-radius);\n  border: solid var(--sg-border-width) var(--sg-border-color);\n  font-weight: 500;\n  min-height: 2.75rem;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n}\n:host button:focus:not(:focus-visible),\n:host a:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host button:focus, :host button:focus-visible,\n:host a:focus,\n:host a:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n@media (max-width: 35.98em) {\n  :host button,\n  :host a {\n    min-width: 100%;\n  }\n}\n@media screen and (-ms-high-contrast: active) {\n  :host button,\n  :host a {\n    border: 2px solid currentcolor;\n  }\n}\n:host button.small,\n:host a.small {\n  min-height: 2rem;\n  padding: 0.4375rem 0.75rem;\n  line-height: 1rem;\n}\n:host button.large,\n:host a.large {\n  min-height: 4rem;\n  padding: 1rem 1.5rem;\n  font-size: 1.5rem;\n  line-height: 2rem;\n}\n:host .primary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: rgb(0, 122, 199);\n  border-color: rgb(0, 122, 199);\n  color: #fff;\n  --color: #fff;\n}\n:host .primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .primary[aria-selected=true], :host .primary:active, :host .primary.active, :host .primary.active:hover, :host .primary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .primary:focus-visible {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3 !important;\n}\n:host .primary:disabled, :host .primary.disabled, :host .primary[aria-disabled=true] {\n  background: var(--form-control-primary-bg-disabled) !important;\n  color: var(--text-primary-disabled-color) !important;\n  border-color: var(--border-primary-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .primary:disabled::placeholder, :host .primary.disabled::placeholder, :host .primary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .secondary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: transparent;\n  border-color: rgb(0, 122, 199);\n  color: rgb(0, 122, 199);\n  --color: rgb(0, 122, 199);\n}\n:host .secondary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .secondary:focus, :host .secondary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .secondary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .secondary[aria-selected=true], :host .secondary:active, :host .secondary.active, :host .secondary.active:hover, :host .secondary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .secondary:disabled, :host .secondary.disabled, :host .secondary[aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .secondary:disabled::placeholder, :host .secondary.disabled::placeholder, :host .secondary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .tertiary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: transparent;\n  border-color: transparent;\n  color: rgb(0, 122, 199);\n  --color: rgb(0, 122, 199);\n}\n:host .tertiary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .tertiary:focus, :host .tertiary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .tertiary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .tertiary[aria-selected=true], :host .tertiary:active, :host .tertiary.active, :host .tertiary.active:hover, :host .tertiary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .tertiary:disabled, :host .tertiary.disabled, :host .tertiary[aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .tertiary:disabled::placeholder, :host .tertiary.disabled::placeholder, :host .tertiary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .ghost-light {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  border-color: rgb(255, 255, 255);\n  color: rgb(255, 255, 255);\n  --color: rgb(255, 255, 255);\n}\n:host .ghost-light:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected=true], :host .ghost-light:active, :host .ghost-light.active, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected]:hover, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  opacity: 0.9;\n}\n:host .ghost-light:focus-visible {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255) !important;\n}\n:host .ghost-light:disabled, :host .ghost-light.disabled, :host .ghost-light[aria-disabled=true] {\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .ghost-light:disabled::placeholder, :host .ghost-light.disabled::placeholder, :host .ghost-light[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .ghost {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  border-color: rgb(51, 51, 51);\n  color: rgb(51, 51, 51);\n  --color: rgb(51, 51, 51);\n}\n:host .ghost:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51);\n}\n:host .ghost[aria-selected=true], :host .ghost:active, :host .ghost.active, :host .ghost.active:hover, :host .ghost:active:hover {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51);\n}\n:host .ghost[aria-selected]:hover, :host .ghost.active:hover, :host .ghost:active:hover {\n  opacity: 0.9;\n}\n:host .ghost:focus-visible {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51) !important;\n}\n:host .ghost:disabled, :host .ghost.disabled, :host .ghost[aria-disabled=true] {\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .ghost:disabled::placeholder, :host .ghost.disabled::placeholder, :host .ghost[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .danger.primary {\n  background: rgb(187, 0, 12);\n  border-color: rgb(187, 0, 12);\n  color: #fff;\n  --color: #fff;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n}\n:host .danger.primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(216, 26, 26);\n  color: rgb(255, 255, 255);\n  --background: rgb(216, 26, 26);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(216, 26, 26);\n}\n:host .danger.primary[aria-selected=true], :host .danger.primary:active, :host .danger.primary.active, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  background-color: rgb(187, 0, 12);\n  color: rgb(255, 255, 255);\n  --background: rgb(187, 0, 12);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(187, 0, 12);\n}\n:host .danger.primary[aria-selected]:hover, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  opacity: 0.9;\n}\n:host .danger.primary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger.primary:focus, :host .danger.primary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .danger.primary:disabled, :host .danger.primary.disabled, :host .danger.primary[aria-disabled=true] {\n  background: var(--form-control-primary-bg-disabled) !important;\n  color: var(--text-primary-disabled-color) !important;\n  border-color: var(--border-primary-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .danger.primary:disabled::placeholder, :host .danger.primary.disabled::placeholder, :host .danger.primary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .danger:not(.primary) {\n  color: rgb(187, 0, 12);\n  --color: rgb(187, 0, 12);\n  border-color: transparent;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n}\n:host .danger:not(.primary):not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(216, 26, 26);\n  color: rgb(255, 255, 255);\n  --background: rgb(216, 26, 26);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(216, 26, 26);\n}\n:host .danger:not(.primary)[aria-selected=true], :host .danger:not(.primary):active, :host .danger:not(.primary).active, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  background-color: rgb(187, 0, 12);\n  color: rgb(255, 255, 255);\n  --background: rgb(187, 0, 12);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(187, 0, 12);\n}\n:host .danger:not(.primary)[aria-selected]:hover, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  opacity: 0.9;\n}\n:host .danger:not(.primary):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger:not(.primary):focus, :host .danger:not(.primary):focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/checkbox/checkbox.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/* base style for forms */\n/* horizontal layout for forms */\n/* label for checkboxes and radio buttons */\n/* form group */\n/* form text */\n:host {\n  /******************************************/\n  /*********** Component Tokens *************/\n  /******************************************/\n  --gds-comp-checkbox-container-height: 1rem;\n  --gds-comp-checkbox-container-width: 1rem;\n  --gds-comp-checkbox-container-color: var(--gds-sys-color-surface);\n  --gds-comp-checkbox-container-color-disabled: var(--gds-ref-pallet-base200);\n  --gds-comp-checkbox-border-color: var(--gds-sys-color-base);\n  --gds-comp-checkbox-border-radius: var(--gds-sys-shape-corner-small);\n  --gds-comp-checkbox-hover-border-color: var(--gds-ref-pallet-base600);\n  --gds-comp-checkbox-container-color-selected: var(--gds-sys-color-base);\n  --gds-comp-checkbox-border-color-selected: var(--gds-sys-color-surface);\n  --gds-comp-checkbox-border-color-focus: var(--gds-sys-color-blue-dark-2);\n  /*  @media (prefers-color-scheme: dark) {\n    --gds-comp-checkbox-container-color: var(--gds-sys-color-base-container);\n    --gds-comp-checkbox-border-color: transparent;\n    --gds-comp-checkbox-hover-border-color: var(--gds-sys-color-blue);\n    --gds-comp-checkbox-container-color-selected: var(--gds-sys-color-blue-dark-2);\n    --gds-comp-checkbox-border-color-selected: var(--gds-ref-pallet-base000);\n  }\n\n  .light {\n    --gds-comp-checkbox-container-color: var(--gds-sys-color-surface);\n    --gds-comp-checkbox-border-color: var(--gds-sys-color-base);\n    --gds-comp-checkbox-border-radius: var(--gds-sys-shape-corner-small);\n    --gds-comp-checkbox-hover-border-color: var(--gds-ref-pallet-base600);\n    --gds-comp-checkbox-container-color-selected: var(--gds-sys-color-base);\n    --gds-comp-checkbox-border-color-selected: var(--gds-sys-color-surface);\n  }*/\n  /* Hide the browser\'s default checkbox */\n  /* Add focus to form-control field */\n  /* Style for custom checkbox */\n  /* Hover state */\n  /* Indeterminate state */\n  /* Disabled state */\n  /* Checkmark */\n  /* Show the checkmark when checked */\n}\n:host label.form-control input[type=checkbox] {\n  cursor: pointer;\n  height: 0;\n  opacity: 0;\n  position: absolute;\n  width: 0;\n  z-index: -1;\n}\n:host label.form-control {\n  align-items: flex-start;\n}\n:host label.form-control:has(input[type=checkbox]) {\n  padding: 0.6875rem 1rem 0.5625rem;\n}\n:host label.form-control:has(input[type=checkbox]:focus-visible):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host label.form-control:has(input[type=checkbox]:focus-visible):focus, :host label.form-control:has(input[type=checkbox]:focus-visible):focus-within {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host label.form-control input[type=checkbox] ~ i {\n  margin-right: 0.75rem;\n  margin-top: 0.0625rem;\n  flex-shrink: 0;\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-border-color);\n  position: relative;\n  border-radius: var(--gds-comp-checkbox-border-radius);\n  background-color: var(--gds-comp-checkbox-container-color);\n  flex: 0 0 auto;\n  height: var(--gds-comp-checkbox-container-width, 1rem);\n  width: var(--gds-comp-checkbox-container-width, 1rem);\n  transition: color 0.3s ease-in-out, all 0.3s ease-in-out;\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  transition: color 0.3s ease-in-out, all 0.3s ease-in-out;\n}\n:host label.form-control input[type=checkbox]:not(:checked):focus-visible ~ i {\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-border-color-focus);\n}\n:host label.form-control:hover input[type=checkbox]:not(.disabled, :disabled, :checked, :indeterminate) ~ i {\n  border-color: var(--gds-comp-checkbox-hover-border-color);\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-hover-border-color);\n}\n:host label.form-control:hover input[type=checkbox]:not(:checked, :indeterminate, :disabled, .disabled) ~ i::after {\n  border-color: var(--gds-comp-checkbox-hover-border-color);\n  opacity: 1;\n}\n:host label.form-control input[type=checkbox]:checked ~ i {\n  background-color: var(--gds-comp-checkbox-container-color-selected);\n}\n:host label.form-control:hover input[type=checkbox]:checked ~ i {\n  background-color: var(--gds-comp-checkbox-hover-border-color);\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-hover-border-color);\n}\n:host label.form-control input[type=checkbox]:indeterminate ~ i {\n  background-color: var(--gds-comp-checkbox-container-color-selected);\n}\n:host label.form-control input[type=checkbox]:indeterminate ~ i::after {\n  border-bottom: 2px solid var(--gds-comp-checkbox-border-color-selected, #fff);\n  border-left: none;\n  transform: scale(1) rotate(0deg);\n  opacity: 1;\n}\n:host label.form-control:has(input[type=checkbox].is-invalid) {\n  border: 0.0625rem solid var(--intent-danger-background);\n  margin-bottom: 0.5rem;\n}\n:host .is-invalid label.form-control:has(input[type=checkbox].is-invalid) {\n  border: none;\n  margin: 0;\n}\n@supports (-moz-appearance: none) {\n  :host label.form-control.is-invalid {\n    border: 0.0625rem solid var(--intent-danger-background);\n    margin-bottom: 0.5rem;\n  }\n  :host .is-invalid label.form-control.is-invalid {\n    border: none;\n    margin: 0;\n  }\n}\n:host label.form-control input[type=checkbox]:disabled ~ i,\n:host label.form-control input[type=checkbox].disabled ~ i {\n  background: var(--sg-form-control-bg-disabled) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled ~ i::placeholder,\n:host label.form-control input[type=checkbox].disabled ~ i::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i,\n:host label.form-control input[type=checkbox].disabled:checked ~ i {\n  background: var(--sg-form-control-bg-disabled) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i::placeholder,\n:host label.form-control input[type=checkbox].disabled:checked ~ i::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i:after,\n:host label.form-control input[type=checkbox].disabled:checked ~ i:after {\n  border-color: var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled ~ span,\n:host label.form-control input[type=checkbox].disabled ~ span {\n  color: var(--text-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host label.form-control input[type=checkbox]:disabled ~ span::placeholder,\n:host label.form-control input[type=checkbox].disabled ~ span::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  content: "";\n  opacity: 0;\n  position: absolute;\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  border-bottom: 3px solid var(--gds-comp-checkbox-border-color-selected, #fff);\n  border-left: 3px solid var(--gds-comp-checkbox-border-color-selected, #fff);\n  height: 0.5rem;\n  width: 1rem;\n  left: 0;\n  top: 0.1875rem;\n  transform: scale(0.601) rotate(-45deg);\n  transform-origin: center;\n}\n:host label.form-control input[type=checkbox]:checked ~ i::after {\n  opacity: 1;\n}\n:host .form-control {\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border: 1px solid transparent;\n  border-radius: var(--gds-sys-shape-corner-medium);\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row-reverse;\n  font: inherit;\n  justify-content: flex-end;\n  position: relative;\n  user-select: none;\n  -webkit-user-select: none;\n}\n:host .form-control:has(input:disabled) {\n  cursor: not-allowed;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/info-circle/info-circle.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}\n\nsvg {\n  display: block;\n  width: 1.5rem;\n  height: 1.5rem;\n}\n\n.gds-tooltip {\n  background-color: #1a1a1a;\n  color: #fff;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 0.5rem;\n  pointer-events: none;\n}\n.gds-tooltip__arrow-top {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  bottom: -1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  border-color: #1a1a1a transparent transparent;\n}\n.gds-tooltip__arrow-bottom {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  top: -1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  border-color: transparent transparent #1a1a1a;\n}\n.gds-tooltip__arrow-left {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  right: -1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  border-color: transparent transparent transparent #1a1a1a;\n}\n.gds-tooltip__arrow-right {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  left: -1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  border-color: transparent #1a1a1a transparent transparent;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);
//# sourceMappingURL=src-v-angular-input-input-stories.cdb7cd87.iframe.bundle.js.map