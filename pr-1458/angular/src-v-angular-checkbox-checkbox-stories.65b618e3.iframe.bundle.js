(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[491],{"./libs/angular/src/v-angular/base-control-value-accessor/base-control-value-accessor.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>BaseControlValueAccessorComponent});var tslib__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),_ngneat_transloco__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs");let BaseControlValueAccessorComponent=class BaseControlValueAccessorComponent{set locked(value){this._locked=value,this.cdr.detectChanges()}get locked(){return this._locked}set required(value){this._required=value}get required(){if(void 0!==this._required)return this._required;if(this.ngControl?.control?.validator){const validator=this.ngControl?.control?.validator({});return Object.keys(validator??{}).some((key=>key.startsWith("required")))}}set invalid(value){this._invalid=value}get invalid(){return!0===this._invalid||!1===this._invalid?this._invalid:!!this.ngControl?.control?.invalid&&this.ngControl?.control?.touched}set valid(value){this._valid=value}get valid(){return!0===this._valid||!1===this._valid?this._valid:!!this.ngControl?.control?.valid&&this.ngControl?.control?.touched}set disabled(value){this._disabled=value}get disabled(){return!0===this._disabled||!1===this._disabled?this._disabled:!!this.ngControl?.control?.disabled}constructor(ngControl,translocoScope,cdr){this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.id=window.ngv?.nextId(),this.autofocus=!1,this._locked=void 0,this._required=void 0,this._invalid=void 0,this._valid=void 0,this.focused=!1,this._disabled=void 0,this.ngvFocus=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.ngvBlur=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this._state=null,this.onChange=_=>{},this.onTouched=()=>{},this.onValidatorChange=()=>null,this._onDestroy$=new rxjs__WEBPACK_IMPORTED_MODULE_1__.B,this.ngControl&&(this.ngControl.valueAccessor=this),this.translocoScope&&(this.scope=this.translocoScope.toString())}ngOnInit(){this.ngControl&&this.ngControl.control&&this.ngControl.control.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.compose([this.ngControl.control.validator,this.validate])),this.reset?.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.Q)(this._onDestroy$)).subscribe({next:()=>{this.state=this.defaultValue,this.onChange(this.state),this.cdr.detectChanges()}})}ngAfterViewInit(){this.defaultValue=this.defaultValue??this.ngControl?.value}ngOnDestroy(){this._onDestroy$.next(!0),this._onDestroy$.complete()}detectChanges(){this.cdr.detectChanges()}onFocus(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.focused=!0,this.ngvFocus.emit(event)}onBlur(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.onTouched(),this.focused=!1,this.ngvBlur.emit(event)}setFocus(){this.inputRef&&this.inputRef.nativeElement.focus()}get state(){return this._state}set state(value){void 0===value&&(value=null),this._state=value}writeValue(value){this.state=value}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,this.displayDisabledAsLocked&&(this.locked=isDisabled)}validate(_control){return null}registerOnValidatorChange(fn){this.onValidatorChange=fn}get firstError(){const errors=this.ngControl.errors;if(!errors)return null;const code=Object.keys(errors)[0];return{code,params:errors[code]}}static#_=this.ctorParameters=()=>[{type:_angular_forms__WEBPACK_IMPORTED_MODULE_2__.vO,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Self},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional}]},{type:void 0,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,args:[_ngneat_transloco__WEBPACK_IMPORTED_MODULE_4__.Lt]}]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef}];static#_2=this.propDecorators={labelContentTpl:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,args:["labelTpl",{read:_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef}]}],inputRef:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["input",{read:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef}]}],id:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["attr.id"]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],name:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],label:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],role:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],value:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],error:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],description:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],autofocus:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],defaultValue:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],reset:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],optional:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],locked:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],displayDisabledAsLocked:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],required:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],invalid:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],valid:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],focused:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],disabled:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],ngvFocus:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}],ngvBlur:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}]}};BaseControlValueAccessorComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_5__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)(),(0,tslib__WEBPACK_IMPORTED_MODULE_5__.Sn)("design:paramtypes",[_angular_forms__WEBPACK_IMPORTED_MODULE_2__.vO,Object,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef])],BaseControlValueAccessorComponent)},"./libs/angular/src/v-angular/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{P:()=>CheckboxComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var checkbox_componentngResource=__webpack_require__("./libs/angular/src/v-angular/checkbox/checkbox.component.scss?ngResource"),checkbox_componentngResource_default=__webpack_require__.n(checkbox_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ngneat_transloco=__webpack_require__("./node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs"),base_control_value_accessor_component=__webpack_require__("./libs/angular/src/v-angular/base-control-value-accessor/base-control-value-accessor.component.ts");let CheckboxComponent=class CheckboxComponent extends base_control_value_accessor_component.q{constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="checkbox",this.optionalLabel="Optional",this.valueChange=new core.EventEmitter}onInputChange(event){event.stopPropagation(),this.disabled||(this.state=!this.state,this.onTouched(),this.onChange(this.state))}writeValue(value){super.writeValue(value===this.value)}registerOnChange(fn){this.onChange=checked=>{const output=checked?this.value:null;fn(output),this.valueChange.emit(output)}}static#_=this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ngneat_transloco.Lt]}]},{type:core.ChangeDetectorRef}];static#_2=this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],optionalLabel:[{type:core.Input}],valueChange:[{type:core.Output}]}};CheckboxComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-checkbox ngv-checkbox",template:'\x3c!-- LOCKED INPUT --\x3e\n<div *ngIf="locked && state" class="sdv-field-checkbox-wrap">\n  <div\n    [id]="id + \'-checkbox\'"\n    class="ngv-field--locked"\n    [attr.name]="name"\n    [attr.value]="value"\n  >\n    <ng-container *ngIf="!labelContentTpl">\n      {{ label }}\n    </ng-container>\n    <ng-template\n      *ngTemplateOutlet="labelContentTpl ?? null; context: { $implicit: value }"\n    ></ng-template>\n  </div>\n</div>\n\n\x3c!-- INPUT WRAPPER --\x3e\n<ng-container *ngIf="!locked">\n  <div class="sdv-field-checkbox-wrap">\n    \x3c!-- CHECKBOX FIELD --\x3e\n    <label\n      [id]="id + \'-label\'"\n      [attr.for]="id + \'-checkbox\'"\n      class="form-control"\n    >\n      <input\n        #input\n        type="checkbox"\n        [id]="id + \'-checkbox\'"\n        [attr.name]="name"\n        [attr.value]="value"\n        [attr.required]="required"\n        [disabled]="disabled"\n        [autofocus]="autofocus"\n        [attr.aria-label]="description"\n        [checked]="state"\n        (click)="$event.stopPropagation()"\n        (change)="onInputChange($event)"\n        (focus)="onFocus($event)"\n        (blur)="onBlur($event)"\n      />\n      \x3c!-- LABEL --\x3e\n      <ng-template\n        *ngTemplateOutlet="labelContentTpl || basicLabelContentTpl"\n      ></ng-template>\n      <ng-template #basicLabelContentTpl>\n        \x3c!-- to trigger css:empty if no label was added --\x3e\n        <ng-container *ngIf="label">\n          <span\n            *ngIf="\n              optional === true || (required !== true && optional !== false)\n            "\n            class="sdv-field-label--optional"\n          >\n            ({{ optionalLabel }})\n          </span>\n          <span>{{ label }}</span>\n        </ng-container>\n      </ng-template>\n      <i></i>\n    </label>\n  </div>\n\n  \x3c!-- ERRORS --\x3e\n  <ng-container>\n    <label\n      class="sdv-field-notice sdv-field-notice--error"\n      [attr.for]="id + \'-checkbox\'"\n      *ngIf="invalid && (error || ngControl?.invalid)"\n    >\n      <span *ngIf="error; else errorsRef">{{ error }}</span>\n      <ng-template #errorsRef>\n        <span *ngIf="firstError as error">\n          {{ error?.message }}\n        </span>\n      </ng-template>\n    </label>\n  </ng-container>\n\n  \x3c!-- CHILDREN --\x3e\n  <ng-content></ng-content>\n</ng-container>\n',styles:[checkbox_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],CheckboxComponent)},"./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>combineLatest});var _Observable__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js"),_from__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),_util_identity__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"),_util_args__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),_util_createObject__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/createObject.js"),_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js");function combineLatest(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.lI)(args),resultSelector=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.ms)(args),_a=(0,_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__.D)(args),observables=_a.args,keys=_a.keys;if(0===observables.length)return(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)([],scheduler);var result=new _Observable__WEBPACK_IMPORTED_MODULE_3__.c(function combineLatestInit(observables,scheduler,valueTransform){void 0===valueTransform&&(valueTransform=_util_identity__WEBPACK_IMPORTED_MODULE_5__.D);return function(subscriber){maybeSchedule(scheduler,(function(){for(var length=observables.length,values=new Array(length),active=length,remainingFirstValues=length,_loop_1=function(i){maybeSchedule(scheduler,(function(){var source=(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)(observables[i],scheduler),hasFirstValue=!1;source.subscribe((0,_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__._)(subscriber,(function(value){values[i]=value,hasFirstValue||(hasFirstValue=!0,remainingFirstValues--),remainingFirstValues||subscriber.next(valueTransform(values.slice()))}),(function(){--active||subscriber.complete()})))}),subscriber)},i=0;i<length;i++)_loop_1(i)}),subscriber)}}(observables,scheduler,keys?function(values){return(0,_util_createObject__WEBPACK_IMPORTED_MODULE_4__.e)(keys,values)}:_util_identity__WEBPACK_IMPORTED_MODULE_5__.D));return resultSelector?result.pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__.I)(resultSelector)):result}function maybeSchedule(scheduler,execute,subscription){scheduler?(0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__.N)(subscription,scheduler,execute):execute()}},"./node_modules/rxjs/dist/esm5/internal/observable/concat.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{x:()=>concat});var mergeAll=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js");var util_args=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js");function concat(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return function concatAll(){return(0,mergeAll.U)(1)}()((0,from.H)(args,(0,util_args.lI)(args)))}},"./node_modules/rxjs/dist/esm5/internal/operators/catchError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>catchError});var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js");function catchError(selector){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){var handledResult,innerSub=null,syncUnsub=!1;innerSub=source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__._)(subscriber,void 0,void 0,(function(err){handledResult=(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.Tg)(selector(err,catchError(selector)(source))),innerSub?(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber)):syncUnsub=!0}))),syncUnsub&&(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber))}))}},"./node_modules/rxjs/dist/esm5/internal/operators/delay.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{c:()=>delay});var scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),concat=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/concat.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");var mapTo=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js"),mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return(0,concat.x)(subscriptionDelay.pipe((0,take.s)(1),function ignoreElements(){return(0,lift.N)((function(source,subscriber){source.subscribe((0,OperatorSubscriber._)(subscriber,noop.l))}))}()),source.pipe(delayWhen(delayDurationSelector)))}:(0,mergeMap.Z)((function(value,index){return(0,innerFrom.Tg)(delayDurationSelector(value,index)).pipe((0,take.s)(1),(0,mapTo.u)(value))}))}var timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js");function delay(due,scheduler){void 0===scheduler&&(scheduler=scheduler_async.E);var duration=(0,timer.O)(due,scheduler);return delayWhen((function(){return duration}))}},"./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{u:()=>mapTo});var _map__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");function mapTo(value){return(0,_map__WEBPACK_IMPORTED_MODULE_0__.T)((function(){return value}))}},"./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Q:()=>takeUntil});var _util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_util_noop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");function takeUntil(notifier){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__.Tg)(notifier).subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(){return subscriber.complete()}),_util_noop__WEBPACK_IMPORTED_MODULE_3__.l)),!subscriber.closed&&source.subscribe(subscriber)}))}},"./libs/angular/src/v-angular/checkbox/checkbox.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Multiple:()=>Multiple,Single:()=>Single,WithDisplayDisabledAsLocked:()=>WithDisplayDisabledAsLocked,WithLockedInput:()=>WithLockedInput,WithReactiveForm:()=>WithReactiveForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"V-Angular/Checkbox",component:__webpack_require__("./libs/angular/src/v-angular/checkbox/checkbox.component.ts").P,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.YN,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.X1]})]},TemplateWithReactiveForm=args=>{const grp=new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.J3({vanilla:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.hs("vanilla"===args.selected?args.selected:null),strawberry:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.hs("strawberry"===args.selected?args.selected:null),chocolate:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.hs("chocolate"===args.selected?args.selected:null)});grp.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.c)(0)).subscribe(console.log);let disabled=!0;return{template:'\n      <label class="sdv-field-label" style="margin-bottom: 0.25em">Favorite flavours:</label>\n      <div [formGroup]="formGroup">\n        <ngv-checkbox id="opt1"\n          [name]="name"\n          label="Vanilla"\n          value="vanilla"\n          formControlName="vanilla"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Vanilla 🍦</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt2"\n          [name]="name"\n          label="Strawberry"\n          value="strawberry"\n          formControlName="strawberry"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Strawberry 🍧</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt3"\n          [name]="name"\n          label="Chocolate"\n          value="chocolate"\n          formControlName="chocolate"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Chocolate 🍫</ng-template>\n        </ngv-checkbox>\n      </div>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n    ',props:{...args,formGroup:grp,disableFn:()=>{disabled=!disabled,disabled?Object.values(grp.controls).forEach((ctrl=>ctrl.enable())):Object.values(grp.controls).forEach((ctrl=>ctrl.disable()))}}}},Single=(args=>({template:'\n    <ngv-checkbox\n      id=\'123\'\n      [label]="label"\n      [value]="value"\n      [disabled]="disabled"\n      [required]="required"\n      [ngModel]="checked"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>',props:args})).bind({});Single.args={checked:!1,label:"Field label",value:"option",action:console.log,required:!0,disabled:!1};const Multiple=(args=>({template:'\n    <ngv-checkbox\n      [id]="opt1.id" [name]="name" [label]="opt1.label" [value]="opt1.value"\n      [ngModel]="opt1.ngModel"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>\n    <ngv-checkbox\n      [id]="opt2.id" [name]="name" [label]="opt2.label" [value]="opt2.value"\n      [ngModel]="opt2.ngModel"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>\n    <ngv-checkbox\n      [id]="opt3.id" [name]="name" [label]="opt3.label" [value]="opt3.value"\n      [ngModel]="opt3.ngModel"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>',props:args})).bind({});Multiple.args={name:"options",opt1:{id:"opt1",checked:!1,label:"Field label 1",value:"option1"},opt2:{id:"opt2",checked:!1,label:"Field label 2",value:"option2"},opt3:{id:"opt3",checked:!1,label:"Field label 3",value:"option3"},action:console.log};const WithReactiveForm=TemplateWithReactiveForm.bind({});WithReactiveForm.args={name:"iceCream",selected:"chocolate"};const WithLockedInput=TemplateWithReactiveForm.bind({});WithLockedInput.args={...WithReactiveForm.args,locked:!0};const WithDisplayDisabledAsLocked=TemplateWithReactiveForm.bind({});WithDisplayDisabledAsLocked.args={...WithReactiveForm.args,locked:!1,displayDisabledAsLocked:!0},Single.parameters={...Single.parameters,docs:{...Single.parameters?.docs,source:{originalSource:'(args: CheckboxComponent & StoryInputListener) => ({\n  template: /*html*/`\n    <ngv-checkbox\n      id=\'123\'\n      [label]="label"\n      [value]="value"\n      [disabled]="disabled"\n      [required]="required"\n      [ngModel]="checked"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>`,\n  props: args\n})',...Single.parameters?.docs?.source}}},Multiple.parameters={...Multiple.parameters,docs:{...Multiple.parameters?.docs,source:{originalSource:'(args: CheckboxComponent & StoryInputListener) => ({\n  template: /*html*/`\n    <ngv-checkbox\n      [id]="opt1.id" [name]="name" [label]="opt1.label" [value]="opt1.value"\n      [ngModel]="opt1.ngModel"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>\n    <ngv-checkbox\n      [id]="opt2.id" [name]="name" [label]="opt2.label" [value]="opt2.value"\n      [ngModel]="opt2.ngModel"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>\n    <ngv-checkbox\n      [id]="opt3.id" [name]="name" [label]="opt3.label" [value]="opt3.value"\n      [ngModel]="opt3.ngModel"\n      (ngModelChange)="action($event)">\n    </ngv-checkbox>`,\n  props: args\n})',...Multiple.parameters?.docs?.source}}},WithReactiveForm.parameters={...WithReactiveForm.parameters,docs:{...WithReactiveForm.parameters?.docs,source:{originalSource:'(args: CheckboxComponent & any) => {\n  const grp = new UntypedFormGroup({\n    vanilla: new UntypedFormControl(args.selected === \'vanilla\' ? args.selected : null),\n    strawberry: new UntypedFormControl(args.selected === \'strawberry\' ? args.selected : null),\n    chocolate: new UntypedFormControl(args.selected === \'chocolate\' ? args.selected : null)\n  });\n  grp.valueChanges.pipe(delay(0)).subscribe(console.log);\n  let disabled = true;\n  const toggleDisableField = () => {\n    disabled = !disabled;\n    if (!!disabled) {\n      Object.values(grp.controls).forEach(ctrl => ctrl.enable());\n      return;\n    }\n    Object.values(grp.controls).forEach(ctrl => ctrl.disable());\n  };\n  return {\n    template: /*html*/`\n      <label class="sdv-field-label" style="margin-bottom: 0.25em">Favorite flavours:</label>\n      <div [formGroup]="formGroup">\n        <ngv-checkbox id="opt1"\n          [name]="name"\n          label="Vanilla"\n          value="vanilla"\n          formControlName="vanilla"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Vanilla 🍦</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt2"\n          [name]="name"\n          label="Strawberry"\n          value="strawberry"\n          formControlName="strawberry"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Strawberry 🍧</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt3"\n          [name]="name"\n          label="Chocolate"\n          value="chocolate"\n          formControlName="chocolate"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Chocolate 🍫</ng-template>\n        </ngv-checkbox>\n      </div>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n    `,\n    props: {\n      ...args,\n      formGroup: grp,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithReactiveForm.parameters?.docs?.source}}},WithLockedInput.parameters={...WithLockedInput.parameters,docs:{...WithLockedInput.parameters?.docs,source:{originalSource:'(args: CheckboxComponent & any) => {\n  const grp = new UntypedFormGroup({\n    vanilla: new UntypedFormControl(args.selected === \'vanilla\' ? args.selected : null),\n    strawberry: new UntypedFormControl(args.selected === \'strawberry\' ? args.selected : null),\n    chocolate: new UntypedFormControl(args.selected === \'chocolate\' ? args.selected : null)\n  });\n  grp.valueChanges.pipe(delay(0)).subscribe(console.log);\n  let disabled = true;\n  const toggleDisableField = () => {\n    disabled = !disabled;\n    if (!!disabled) {\n      Object.values(grp.controls).forEach(ctrl => ctrl.enable());\n      return;\n    }\n    Object.values(grp.controls).forEach(ctrl => ctrl.disable());\n  };\n  return {\n    template: /*html*/`\n      <label class="sdv-field-label" style="margin-bottom: 0.25em">Favorite flavours:</label>\n      <div [formGroup]="formGroup">\n        <ngv-checkbox id="opt1"\n          [name]="name"\n          label="Vanilla"\n          value="vanilla"\n          formControlName="vanilla"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Vanilla 🍦</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt2"\n          [name]="name"\n          label="Strawberry"\n          value="strawberry"\n          formControlName="strawberry"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Strawberry 🍧</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt3"\n          [name]="name"\n          label="Chocolate"\n          value="chocolate"\n          formControlName="chocolate"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Chocolate 🍫</ng-template>\n        </ngv-checkbox>\n      </div>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n    `,\n    props: {\n      ...args,\n      formGroup: grp,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithLockedInput.parameters?.docs?.source}}},WithDisplayDisabledAsLocked.parameters={...WithDisplayDisabledAsLocked.parameters,docs:{...WithDisplayDisabledAsLocked.parameters?.docs,source:{originalSource:'(args: CheckboxComponent & any) => {\n  const grp = new UntypedFormGroup({\n    vanilla: new UntypedFormControl(args.selected === \'vanilla\' ? args.selected : null),\n    strawberry: new UntypedFormControl(args.selected === \'strawberry\' ? args.selected : null),\n    chocolate: new UntypedFormControl(args.selected === \'chocolate\' ? args.selected : null)\n  });\n  grp.valueChanges.pipe(delay(0)).subscribe(console.log);\n  let disabled = true;\n  const toggleDisableField = () => {\n    disabled = !disabled;\n    if (!!disabled) {\n      Object.values(grp.controls).forEach(ctrl => ctrl.enable());\n      return;\n    }\n    Object.values(grp.controls).forEach(ctrl => ctrl.disable());\n  };\n  return {\n    template: /*html*/`\n      <label class="sdv-field-label" style="margin-bottom: 0.25em">Favorite flavours:</label>\n      <div [formGroup]="formGroup">\n        <ngv-checkbox id="opt1"\n          [name]="name"\n          label="Vanilla"\n          value="vanilla"\n          formControlName="vanilla"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Vanilla 🍦</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt2"\n          [name]="name"\n          label="Strawberry"\n          value="strawberry"\n          formControlName="strawberry"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Strawberry 🍧</ng-template>\n        </ngv-checkbox>\n        <ngv-checkbox id="opt3"\n          [name]="name"\n          label="Chocolate"\n          value="chocolate"\n          formControlName="chocolate"\n          [optional]="false"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n          <ng-template #labelTpl>Chocolate 🍫</ng-template>\n        </ngv-checkbox>\n      </div>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n    `,\n    props: {\n      ...args,\n      formGroup: grp,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithDisplayDisabledAsLocked.parameters?.docs?.source}}};const __namedExportsOrder=["Single","Multiple","WithReactiveForm","WithLockedInput","WithDisplayDisabledAsLocked"]},"./libs/angular/src/v-angular/checkbox/checkbox.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/* base style for forms */\n/* horizontal layout for forms */\n/* label for checkboxes and radio buttons */\n/* form group */\n/* form text */\n:host {\n  /******************************************/\n  /*********** Component Tokens *************/\n  /******************************************/\n  --gds-comp-checkbox-container-height: 1rem;\n  --gds-comp-checkbox-container-width: 1rem;\n  --gds-comp-checkbox-container-color: var(--gds-sys-color-surface);\n  --gds-comp-checkbox-container-color-disabled: var(--gds-ref-pallet-base200);\n  --gds-comp-checkbox-border-color: var(--gds-sys-color-base);\n  --gds-comp-checkbox-border-radius: var(--gds-sys-shape-corner-small);\n  --gds-comp-checkbox-hover-border-color: var(--gds-ref-pallet-base600);\n  --gds-comp-checkbox-container-color-selected: var(--gds-sys-color-base);\n  --gds-comp-checkbox-border-color-selected: var(--gds-sys-color-surface);\n  --gds-comp-checkbox-border-color-focus: var(--gds-sys-color-blue-dark-2);\n  /*  @media (prefers-color-scheme: dark) {\n    --gds-comp-checkbox-container-color: var(--gds-sys-color-base-container);\n    --gds-comp-checkbox-border-color: transparent;\n    --gds-comp-checkbox-hover-border-color: var(--gds-sys-color-blue);\n    --gds-comp-checkbox-container-color-selected: var(--gds-sys-color-blue-dark-2);\n    --gds-comp-checkbox-border-color-selected: var(--gds-ref-pallet-base000);\n  }\n\n  .light {\n    --gds-comp-checkbox-container-color: var(--gds-sys-color-surface);\n    --gds-comp-checkbox-border-color: var(--gds-sys-color-base);\n    --gds-comp-checkbox-border-radius: var(--gds-sys-shape-corner-small);\n    --gds-comp-checkbox-hover-border-color: var(--gds-ref-pallet-base600);\n    --gds-comp-checkbox-container-color-selected: var(--gds-sys-color-base);\n    --gds-comp-checkbox-border-color-selected: var(--gds-sys-color-surface);\n  }*/\n  /* Hide the browser\'s default checkbox */\n  /* Add focus to form-control field */\n  /* Style for custom checkbox */\n  /* Hover state */\n  /* Indeterminate state */\n  /* Disabled state */\n  /* Checkmark */\n  /* Show the checkmark when checked */\n}\n:host label.form-control input[type=checkbox] {\n  cursor: pointer;\n  height: 0;\n  opacity: 0;\n  position: absolute;\n  width: 0;\n  z-index: -1;\n}\n:host label.form-control {\n  align-items: flex-start;\n}\n:host label.form-control:has(input[type=checkbox]) {\n  padding: 0.6875rem 1rem 0.5625rem;\n}\n:host label.form-control:has(input[type=checkbox]:focus-visible):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host label.form-control:has(input[type=checkbox]:focus-visible):focus, :host label.form-control:has(input[type=checkbox]:focus-visible):focus-within {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host label.form-control input[type=checkbox] ~ i {\n  margin-right: 0.75rem;\n  margin-top: 0.0625rem;\n  flex-shrink: 0;\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-border-color);\n  position: relative;\n  border-radius: var(--gds-comp-checkbox-border-radius);\n  background-color: var(--gds-comp-checkbox-container-color);\n  flex: 0 0 auto;\n  height: var(--gds-comp-checkbox-container-width, 1rem);\n  width: var(--gds-comp-checkbox-container-width, 1rem);\n  transition: color 0.3s ease-in-out, all 0.3s ease-in-out;\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  transition: color 0.3s ease-in-out, all 0.3s ease-in-out;\n}\n:host label.form-control input[type=checkbox]:not(:checked):focus-visible ~ i {\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-border-color-focus);\n}\n:host label.form-control:hover input[type=checkbox]:not(.disabled, :disabled, :checked, :indeterminate) ~ i {\n  border-color: var(--gds-comp-checkbox-hover-border-color);\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-hover-border-color);\n}\n:host label.form-control:hover input[type=checkbox]:not(:checked, :indeterminate, :disabled, .disabled) ~ i::after {\n  border-color: var(--gds-comp-checkbox-hover-border-color);\n  opacity: 1;\n}\n:host label.form-control input[type=checkbox]:checked ~ i {\n  background-color: var(--gds-comp-checkbox-container-color-selected);\n}\n:host label.form-control:hover input[type=checkbox]:checked ~ i {\n  background-color: var(--gds-comp-checkbox-hover-border-color);\n  box-shadow: inset 0 0 0 1px var(--gds-comp-checkbox-hover-border-color);\n}\n:host label.form-control input[type=checkbox]:indeterminate ~ i {\n  background-color: var(--gds-comp-checkbox-container-color-selected);\n}\n:host label.form-control input[type=checkbox]:indeterminate ~ i::after {\n  border-bottom: 2px solid var(--gds-comp-checkbox-border-color-selected, #fff);\n  border-left: none;\n  transform: scale(1) rotate(0deg);\n  opacity: 1;\n}\n:host label.form-control:has(input[type=checkbox].is-invalid) {\n  border: 0.0625rem solid var(--intent-danger-background);\n  margin-bottom: 0.5rem;\n}\n:host .is-invalid label.form-control:has(input[type=checkbox].is-invalid) {\n  border: none;\n  margin: 0;\n}\n@supports (-moz-appearance: none) {\n  :host label.form-control.is-invalid {\n    border: 0.0625rem solid var(--intent-danger-background);\n    margin-bottom: 0.5rem;\n  }\n  :host .is-invalid label.form-control.is-invalid {\n    border: none;\n    margin: 0;\n  }\n}\n:host label.form-control input[type=checkbox]:disabled ~ i,\n:host label.form-control input[type=checkbox].disabled ~ i {\n  background: var(--sg-form-control-bg-disabled) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled ~ i::placeholder,\n:host label.form-control input[type=checkbox].disabled ~ i::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i,\n:host label.form-control input[type=checkbox].disabled:checked ~ i {\n  background: var(--sg-form-control-bg-disabled) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i::placeholder,\n:host label.form-control input[type=checkbox].disabled:checked ~ i::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i:after,\n:host label.form-control input[type=checkbox].disabled:checked ~ i:after {\n  border-color: var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled ~ span,\n:host label.form-control input[type=checkbox].disabled ~ span {\n  color: var(--text-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host label.form-control input[type=checkbox]:disabled ~ span::placeholder,\n:host label.form-control input[type=checkbox].disabled ~ span::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  content: "";\n  opacity: 0;\n  position: absolute;\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  border-bottom: 3px solid var(--gds-comp-checkbox-border-color-selected, #fff);\n  border-left: 3px solid var(--gds-comp-checkbox-border-color-selected, #fff);\n  height: 0.5rem;\n  width: 1rem;\n  left: 0;\n  top: 0.1875rem;\n  transform: scale(0.601) rotate(-45deg);\n  transform-origin: center;\n}\n:host label.form-control input[type=checkbox]:checked ~ i::after {\n  opacity: 1;\n}\n:host .form-control {\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border: 1px solid transparent;\n  border-radius: var(--gds-sys-shape-corner-medium);\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row-reverse;\n  font: inherit;\n  justify-content: flex-end;\n  position: relative;\n  user-select: none;\n  -webkit-user-select: none;\n}\n:host .form-control:has(input:disabled) {\n  cursor: not-allowed;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);