(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[429],{"./libs/angular/src/lib/shared/base-control-value-accessor/base-control-value-accessor.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>BaseControlValueAccessorComponent});var tslib__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),_ngneat_transloco__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs");let BaseControlValueAccessorComponent=class BaseControlValueAccessorComponent{set locked(value){this._locked=value,this.cdr.detectChanges()}get locked(){return this._locked}set required(value){this._required=value}get required(){if(void 0!==this._required)return this._required;if(this.ngControl?.control?.validator){const validator=this.ngControl?.control?.validator({});return Object.keys(validator??{}).some((key=>key.startsWith("required")))}}set invalid(value){this._invalid=value}get invalid(){return!0===this._invalid||!1===this._invalid?this._invalid:!!this.ngControl?.control?.invalid&&this.ngControl?.control?.touched}set valid(value){this._valid=value}get valid(){return!0===this._valid||!1===this._valid?this._valid:!!this.ngControl?.control?.valid&&this.ngControl?.control?.touched}set disabled(value){this._disabled=value}get disabled(){return!0===this._disabled||!1===this._disabled?this._disabled:!!this.ngControl?.control?.disabled}constructor(ngControl,translocoScope,cdr){this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.id=window.ngv?.nextId(),this.autofocus=!1,this._locked=void 0,this._required=void 0,this._invalid=void 0,this._valid=void 0,this.focused=!1,this._disabled=void 0,this.ngvFocus=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.ngvBlur=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this._state=null,this.onChange=_=>{},this.onTouched=()=>{},this.onValidatorChange=()=>null,this._onDestroy$=new rxjs__WEBPACK_IMPORTED_MODULE_1__.B,this.ngControl&&(this.ngControl.valueAccessor=this),this.translocoScope&&(this.scope=this.translocoScope.toString())}ngOnInit(){this.ngControl&&this.ngControl.control&&this.ngControl.control.setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_2__.k0.compose([this.ngControl.control.validator,this.validate])),this.reset?.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.Q)(this._onDestroy$)).subscribe({next:()=>{this.state=this.defaultValue,this.onChange(this.state),this.cdr.detectChanges()}})}ngAfterViewInit(){this.defaultValue=this.defaultValue??this.ngControl?.value}ngOnDestroy(){this._onDestroy$.next(!0),this._onDestroy$.complete()}detectChanges(){this.cdr.detectChanges()}onFocus(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.focused=!0,this.ngvFocus.emit(event)}onBlur(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.onTouched(),this.focused=!1,this.ngvBlur.emit(event)}setFocus(){this.inputRef&&this.inputRef.nativeElement.focus()}get state(){return this._state}set state(value){void 0===value&&(value=null),this._state=value}writeValue(value){this.state=value}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,this.displayDisabledAsLocked&&(this.locked=isDisabled)}validate(_control){return null}registerOnValidatorChange(fn){this.onValidatorChange=fn}get firstError(){const errors=this.ngControl.errors;if(!errors)return null;const code=Object.keys(errors)[0];return{code,params:errors[code]}}static#_=this.ctorParameters=()=>[{type:_angular_forms__WEBPACK_IMPORTED_MODULE_2__.vO,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Self},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional}]},{type:void 0,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,args:[_ngneat_transloco__WEBPACK_IMPORTED_MODULE_4__.Lt]}]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef}];static#_2=this.propDecorators={labelContentTpl:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,args:["labelTpl",{read:_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef}]}],inputRef:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,args:["input",{read:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef}]}],id:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["attr.id"]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],name:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],label:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],role:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],value:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],error:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],description:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],autofocus:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],defaultValue:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],reset:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],optional:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],locked:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],displayDisabledAsLocked:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],required:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],invalid:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],valid:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],focused:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],disabled:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],ngvFocus:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}],ngvBlur:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}]}};BaseControlValueAccessorComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_5__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)(),(0,tslib__WEBPACK_IMPORTED_MODULE_5__.Sn)("design:paramtypes",[_angular_forms__WEBPACK_IMPORTED_MODULE_2__.vO,Object,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef])],BaseControlValueAccessorComponent)},"./libs/angular/src/lib/shared/external-link/external-link.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{V:()=>ExternalLinkDirective});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_router__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs");let ExternalLinkDirective=class ExternalLinkDirective{constructor(link){this.link=link,this.external=!1}ngOnInit(){this.external&&(this.link.onClick=()=>(window.location.href=this.link.commands[0],!1))}static#_=this.ctorParameters=()=>[{type:_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk}];static#_2=this.propDecorators={external:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}]}};ExternalLinkDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({selector:"a[routerLink]"}),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Sn)("design:paramtypes",[_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk])],ExternalLinkDirective)},"./libs/angular/src/v-angular/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alternative:()=>Alternative,Delete:()=>Delete,DeleteConfirm:()=>DeleteConfirm,Ghost:()=>Ghost,GhostDark:()=>GhostDark,Link:()=>Link,Primary:()=>Primary,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>button_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),testing=__webpack_require__("./node_modules/@angular/router/fesm2022/testing.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),external_link_directive=__webpack_require__("./libs/angular/src/lib/shared/external-link/external-link.directive.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var ButtonComponent_1,ButtonStyle,button_componentngResource=__webpack_require__("./libs/angular/src/v-angular/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ngneat_transloco=__webpack_require__("./node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs"),base_control_value_accessor_component=__webpack_require__("./libs/angular/src/lib/shared/base-control-value-accessor/base-control-value-accessor.component.ts");!function(ButtonStyle){ButtonStyle[ButtonStyle.Primary=0]="Primary",ButtonStyle[ButtonStyle.Secondary=1]="Secondary",ButtonStyle[ButtonStyle.Alternative=2]="Alternative",ButtonStyle[ButtonStyle.Delete=3]="Delete",ButtonStyle[ButtonStyle.DeleteConfirm=4]="DeleteConfirm",ButtonStyle[ButtonStyle.Ghost=5]="Ghost",ButtonStyle[ButtonStyle.GhostDark=6]="GhostDark",ButtonStyle[ButtonStyle.Link=7]="Link"}(ButtonStyle||(ButtonStyle={}));let ButtonComponent=class ButtonComponent extends base_control_value_accessor_component.q{static#_=ButtonComponent_1=this;constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="button",this.type="button",this.buttonStyle="link"===this.type?ButtonStyle.Link:ButtonStyle.Primary,this.small=!1,this.external=!1,this.buttonClasses={},this.ngvClick=new core.EventEmitter}static buttonStyleClasses(type,small){return{small,primary:type===ButtonStyle.Primary||type===ButtonStyle.Delete,secondary:type===ButtonStyle.Secondary,tertiary:type===ButtonStyle.Alternative||type===ButtonStyle.Link,danger:type===ButtonStyle.Delete||type===ButtonStyle.DeleteConfirm,ghost:type===ButtonStyle.GhostDark,"ghost-light":type===ButtonStyle.Ghost}}ngOnInit(){super.ngOnInit(),this.href&&(this.external=/^\w+:\/\/.+$/.test(this.href)),this.buttonClasses=ButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small)}ngOnChanges(changes){(changes.buttonStyle||changes.small)&&(this.buttonClasses=ButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small))}onClick(event){this.disabled||this.ngvClick.emit(event)}static#_2=this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[ngneat_transloco.Lt]}]},{type:core.ChangeDetectorRef}];static#_3=this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],type:[{type:core.Input}],buttonStyle:[{type:core.Input}],small:[{type:core.Input}],href:[{type:core.Input}],ngvClick:[{type:core.Output}]}};ButtonComponent=ButtonComponent_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngv-button",template:'<button #input\n  class="sdv-button"\n  [ngClass]="buttonClasses"\n  [id]="id + \'-button\'"\n  [attr.name]="name"\n  [attr.value]="value"\n  [type]="type"\n  [autofocus]="autofocus"\n  [disabled]="disabled"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type !== \'link\'">\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</button>\n\n<a #input\n  class="sdv-button"\n  [ngClass]="buttonClasses"\n  role="button"\n  [id]="id + \'-link\'"\n  [routerLink]="href"\n  [external]="external"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type === \'link\'">\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</a>\n\n<ng-template #contentRef>\n  <ng-content></ng-content>\n</ng-template>\n',styles:[button_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],ButtonComponent);const getButtonText=type=>`${ButtonStyle[type]} button`,button_stories={title:"V-Angular/Button",component:ButtonComponent,decorators:[(0,dist.applicationConfig)({providers:[{provide:common.APP_BASE_HREF,useValue:"/"}]}),(0,dist.moduleMetadata)({imports:[common.CommonModule,testing.c1],declarations:[external_link_directive.V]})],argTypes:{type:{control:{type:"select",options:["button","submit","reset","link"]}},buttonStyle:{table:{disable:!0}},clickAction:{table:{disable:!0}}}},Template=args=>({template:'\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>',styles:["\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }"],props:args}),Primary=Template.bind({});Primary.args={buttonStyle:ButtonStyle.Primary,text:getButtonText(ButtonStyle.Primary),clickAction:console.log};const Secondary=Template.bind({});Secondary.args={...Primary.args,buttonStyle:ButtonStyle.Secondary,text:getButtonText(ButtonStyle.Secondary)};const Alternative=Template.bind({});Alternative.args={...Primary.args,buttonStyle:ButtonStyle.Alternative,text:getButtonText(ButtonStyle.Alternative)};const Delete=Template.bind({});Delete.args={...Primary.args,buttonStyle:ButtonStyle.Delete,text:getButtonText(ButtonStyle.Delete)};const DeleteConfirm=Template.bind({});DeleteConfirm.args={...Primary.args,buttonStyle:ButtonStyle.DeleteConfirm,text:getButtonText(ButtonStyle.DeleteConfirm)};const Ghost=Template.bind({});Ghost.args={...Primary.args,buttonStyle:ButtonStyle.Ghost,text:getButtonText(ButtonStyle.Ghost)};const GhostDark=Template.bind({});GhostDark.args={...Primary.args,buttonStyle:ButtonStyle.GhostDark,text:getButtonText(ButtonStyle.GhostDark)};const Link=Template.bind({});Link.args={...Primary.args,type:"link",href:"https://seb.se",buttonStyle:ButtonStyle.Link,text:getButtonText(ButtonStyle.Link)},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Secondary.parameters?.docs?.source}}},Alternative.parameters={...Alternative.parameters,docs:{...Alternative.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Alternative.parameters?.docs?.source}}},Delete.parameters={...Delete.parameters,docs:{...Delete.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Delete.parameters?.docs?.source}}},DeleteConfirm.parameters={...DeleteConfirm.parameters,docs:{...DeleteConfirm.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...DeleteConfirm.parameters?.docs?.source}}},Ghost.parameters={...Ghost.parameters,docs:{...Ghost.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Ghost.parameters?.docs?.source}}},GhostDark.parameters={...GhostDark.parameters,docs:{...GhostDark.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...GhostDark.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:'(args: ButtonComponent & StoryClickable) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <ngv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (ngvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </ngv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Link.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Secondary","Alternative","Delete","DeleteConfirm","Ghost","GhostDark","Link"]},"./libs/angular/src/v-angular/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n:host .ghost-light {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  border-color: rgb(255, 255, 255);\n  color: rgb(255, 255, 255);\n  --color: rgb(255, 255, 255);\n}\n:host .ghost-light:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected=true], :host .ghost-light:active, :host .ghost-light.active, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected]:hover, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  opacity: 0.9;\n}\n:host .ghost-light:focus-visible {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255) !important;\n}\n:host .ghost-light:disabled, :host .ghost-light.disabled, :host .ghost-light[aria-disabled=true] {\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .ghost-light:disabled::placeholder, :host .ghost-light.disabled::placeholder, :host .ghost-light[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);