(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[3635],{"./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>lastValueFrom});var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/EmptyError.js");function lastValueFrom(source,config){var hasConfig="object"==typeof config;return new Promise((function(resolve,reject){var _value,_hasValue=!1;source.subscribe({next:function(value){_value=value,_hasValue=!0},error:reject,complete:function(){_hasValue?resolve(_value):hasConfig?resolve(config.defaultValue):reject(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__.G)}})}))}},"./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>combineLatest});var _Observable__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js"),_from__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),_util_identity__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"),_util_args__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),_util_createObject__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/createObject.js"),_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js");function combineLatest(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.lI)(args),resultSelector=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.ms)(args),_a=(0,_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__.D)(args),observables=_a.args,keys=_a.keys;if(0===observables.length)return(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)([],scheduler);var result=new _Observable__WEBPACK_IMPORTED_MODULE_3__.c(function combineLatestInit(observables,scheduler,valueTransform){void 0===valueTransform&&(valueTransform=_util_identity__WEBPACK_IMPORTED_MODULE_5__.D);return function(subscriber){maybeSchedule(scheduler,(function(){for(var length=observables.length,values=new Array(length),active=length,remainingFirstValues=length,_loop_1=function(i){maybeSchedule(scheduler,(function(){var source=(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)(observables[i],scheduler),hasFirstValue=!1;source.subscribe((0,_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__._)(subscriber,(function(value){values[i]=value,hasFirstValue||(hasFirstValue=!0,remainingFirstValues--),remainingFirstValues||subscriber.next(valueTransform(values.slice()))}),(function(){--active||subscriber.complete()})))}),subscriber)},i=0;i<length;i++)_loop_1(i)}),subscriber)}}(observables,scheduler,keys?function(values){return(0,_util_createObject__WEBPACK_IMPORTED_MODULE_4__.e)(keys,values)}:_util_identity__WEBPACK_IMPORTED_MODULE_5__.D));return resultSelector?result.pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__.I)(resultSelector)):result}function maybeSchedule(scheduler,execute,subscription){scheduler?(0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__.N)(subscription,scheduler,execute):execute()}},"./node_modules/rxjs/dist/esm5/internal/observable/concat.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{x:()=>concat});var mergeAll=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js");var util_args=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js");function concat(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return function concatAll(){return(0,mergeAll.U)(1)}()((0,from.H)(args,(0,util_args.lI)(args)))}},"./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>fromEvent});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_Observable__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_operators_mergeMap__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),_util_isArrayLike__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js"),_util_isFunction__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/isFunction.js"),_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"),nodeEventEmitterMethods=["addListener","removeListener"],eventTargetMethods=["addEventListener","removeEventListener"],jqueryMethods=["on","off"];function fromEvent(target,eventName,options,resultSelector){if((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(options)&&(resultSelector=options,options=void 0),resultSelector)return fromEvent(target,eventName,options).pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_1__.I)(resultSelector));var _a=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.zs)(function isEventTarget(target){return(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.addEventListener)&&(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.removeEventListener)}(target)?eventTargetMethods.map((function(methodName){return function(handler){return target[methodName](eventName,handler,options)}})):function isNodeStyleEventEmitter(target){return(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.addListener)&&(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.removeListener)}(target)?nodeEventEmitterMethods.map(toCommonHandlerRegistry(target,eventName)):function isJQueryStyleEventEmitter(target){return(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.on)&&(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.T)(target.off)}(target)?jqueryMethods.map(toCommonHandlerRegistry(target,eventName)):[],2),add=_a[0],remove=_a[1];if(!add&&(0,_util_isArrayLike__WEBPACK_IMPORTED_MODULE_3__.X)(target))return(0,_operators_mergeMap__WEBPACK_IMPORTED_MODULE_4__.Z)((function(subTarget){return fromEvent(subTarget,eventName,options)}))((0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_5__.Tg)(target));if(!add)throw new TypeError("Invalid event target");return new _Observable__WEBPACK_IMPORTED_MODULE_6__.c((function(subscriber){var handler=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return subscriber.next(1<args.length?args:args[0])};return add(handler),function(){return remove(handler)}}))}function toCommonHandlerRegistry(target,eventName){return function(methodName){return function(handler){return target[methodName](eventName,handler)}}}},"./node_modules/rxjs/dist/esm5/internal/operators/catchError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>catchError});var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js");function catchError(selector){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){var handledResult,innerSub=null,syncUnsub=!1;innerSub=source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__._)(subscriber,void 0,void 0,(function(err){handledResult=(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.Tg)(selector(err,catchError(selector)(source))),innerSub?(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber)):syncUnsub=!0}))),syncUnsub&&(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber))}))}},"./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{B:()=>debounceTime});var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=_scheduler_async__WEBPACK_IMPORTED_MODULE_0__.E),(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){var activeTask=null,lastValue=null,lastTime=null,emit=function(){if(activeTask){activeTask.unsubscribe(),activeTask=null;var value=lastValue;lastValue=null,subscriber.next(value)}};function emitWhenIdle(){var targetTime=lastTime+dueTime,now=scheduler.now();if(now<targetTime)return activeTask=this.schedule(void 0,targetTime-now),void subscriber.add(activeTask);emit()}source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(value){lastValue=value,lastTime=scheduler.now(),activeTask||(activeTask=scheduler.schedule(emitWhenIdle,dueTime),subscriber.add(activeTask))}),(function(){emit(),subscriber.complete()}),void 0,(function(){lastValue=activeTask=null})))}))}},"./node_modules/rxjs/dist/esm5/internal/operators/delay.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{c:()=>delay});var scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),concat=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/concat.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");var mapTo=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js"),mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return(0,concat.x)(subscriptionDelay.pipe((0,take.s)(1),function ignoreElements(){return(0,lift.N)((function(source,subscriber){source.subscribe((0,OperatorSubscriber._)(subscriber,noop.l))}))}()),source.pipe(delayWhen(delayDurationSelector)))}:(0,mergeMap.Z)((function(value,index){return(0,innerFrom.Tg)(delayDurationSelector(value,index)).pipe((0,take.s)(1),(0,mapTo.u)(value))}))}var timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js");function delay(due,scheduler){void 0===scheduler&&(scheduler=scheduler_async.E);var duration=(0,timer.O)(due,scheduler);return delayWhen((function(){return duration}))}},"./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{u:()=>mapTo});var _map__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");function mapTo(value){return(0,_map__WEBPACK_IMPORTED_MODULE_0__.T)((function(){return value}))}},"./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Q:()=>takeUntil});var _util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_util_noop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");function takeUntil(notifier){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__.Tg)(notifier).subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(){return subscriber.complete()}),_util_noop__WEBPACK_IMPORTED_MODULE_3__.l)),!subscriber.closed&&source.subscribe(subscriber)}))}},"./node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{E:()=>withLatestFrom});var tslib__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_util_identity__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_util_noop__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js"),_util_args__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js");function withLatestFrom(){for(var inputs=[],_i=0;_i<arguments.length;_i++)inputs[_i]=arguments[_i];var project=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.ms)(inputs);return(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){for(var len=inputs.length,otherValues=new Array(len),hasValue=inputs.map((function(){return!1})),ready=!1,_loop_1=function(i){(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.Tg)(inputs[i]).subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_3__._)(subscriber,(function(value){otherValues[i]=value,ready||hasValue[i]||(hasValue[i]=!0,(ready=hasValue.every(_util_identity__WEBPACK_IMPORTED_MODULE_4__.D))&&(hasValue=null))}),_util_noop__WEBPACK_IMPORTED_MODULE_5__.l))},i=0;i<len;i++)_loop_1(i);source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_3__._)(subscriber,(function(value){if(ready){var values=(0,tslib__WEBPACK_IMPORTED_MODULE_6__.fX)([value],(0,tslib__WEBPACK_IMPORTED_MODULE_6__.zs)(otherValues));subscriber.next(project?project.apply(void 0,(0,tslib__WEBPACK_IMPORTED_MODULE_6__.fX)([],(0,tslib__WEBPACK_IMPORTED_MODULE_6__.zs)(values))):values)}})))}))}},"./node_modules/scroll-into-view-if-needed/dist/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>dist_e});const t=t=>"object"==typeof t&&null!=t&&1===t.nodeType,e=(t,e)=>(!e||"hidden"!==t)&&"visible"!==t&&"clip"!==t,n=(t,n)=>{if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){const o=getComputedStyle(t,null);return e(o.overflowY,n)||e(o.overflowX,n)||(t=>{const e=(t=>{if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}})(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)})(t)}return!1},o=(t,e,n,o,l,r,i,s)=>r<t&&i>e||r>t&&i<e?0:r<=t&&s<=n||i>=e&&s>=n?r-t-o:i>e&&s<n||r<t&&s>n?i-e+l:0,l=t=>{const e=t.parentElement;return null==e?t.getRootNode().host||null:e},dist_r=(e,r)=>{var i,s,d,h;if("undefined"==typeof document)return[];const{scrollMode:c,block:f,inline:u,boundary:a,skipOverflowHiddenElements:g}=r,p="function"==typeof a?a:t=>t!==a;if(!t(e))throw new TypeError("Invalid target");const m=document.scrollingElement||document.documentElement,w=[];let W=e;for(;t(W)&&p(W);){if(W=l(W),W===m){w.push(W);break}null!=W&&W===document.body&&n(W)&&!n(document.documentElement)||null!=W&&n(W,g)&&w.push(W)}const b=null!=(s=null==(i=window.visualViewport)?void 0:i.width)?s:innerWidth,H=null!=(h=null==(d=window.visualViewport)?void 0:d.height)?h:innerHeight,{scrollX:y,scrollY:M}=window,{height:v,width:E,top:x,right:C,bottom:I,left:R}=e.getBoundingClientRect(),{top:T,right:B,bottom:F,left:V}=(t=>{const e=window.getComputedStyle(t);return{top:parseFloat(e.scrollMarginTop)||0,right:parseFloat(e.scrollMarginRight)||0,bottom:parseFloat(e.scrollMarginBottom)||0,left:parseFloat(e.scrollMarginLeft)||0}})(e);let k="start"===f||"nearest"===f?x-T:"end"===f?I+F:x+v/2-T+F,D="center"===u?R+E/2-V+B:"end"===u?C+B:R-V;const L=[];for(let t=0;t<w.length;t++){const e=w[t],{height:n,width:l,top:r,right:i,bottom:s,left:d}=e.getBoundingClientRect();if("if-needed"===c&&x>=0&&R>=0&&I<=H&&C<=b&&x>=r&&I<=s&&R>=d&&C<=i)return L;const h=getComputedStyle(e),a=parseInt(h.borderLeftWidth,10),g=parseInt(h.borderTopWidth,10),p=parseInt(h.borderRightWidth,10),W=parseInt(h.borderBottomWidth,10);let T=0,B=0;const F="offsetWidth"in e?e.offsetWidth-e.clientWidth-a-p:0,V="offsetHeight"in e?e.offsetHeight-e.clientHeight-g-W:0,S="offsetWidth"in e?0===e.offsetWidth?0:l/e.offsetWidth:0,X="offsetHeight"in e?0===e.offsetHeight?0:n/e.offsetHeight:0;if(m===e)T="start"===f?k:"end"===f?k-H:"nearest"===f?o(M,M+H,H,g,W,M+k,M+k+v,v):k-H/2,B="start"===u?D:"center"===u?D-b/2:"end"===u?D-b:o(y,y+b,b,a,p,y+D,y+D+E,E),T=Math.max(0,T+M),B=Math.max(0,B+y);else{T="start"===f?k-r-g:"end"===f?k-s+W+V:"nearest"===f?o(r,s,n,g,W+V,k,k+v,v):k-(r+n/2)+V/2,B="start"===u?D-d-a:"center"===u?D-(d+l/2)+F/2:"end"===u?D-i+p+F:o(d,i,l,a,p+F,D,D+E,E);const{scrollLeft:t,scrollTop:h}=e;T=0===X?0:Math.max(0,Math.min(h+T/X,e.scrollHeight-n/X+V)),B=0===S?0:Math.max(0,Math.min(t+B/S,e.scrollWidth-l/S+F)),k+=h-T,D+=t-B}L.push({el:e,top:T,left:B})}return L},dist_o=t=>!1===t?{block:"end",inline:"nearest"}:(t=>t===Object(t)&&0!==Object.keys(t).length)(t)?t:{block:"start",inline:"nearest"};function dist_e(e,r){if(!e.isConnected||!(t=>{let o=t;for(;o&&o.parentNode;){if(o.parentNode===document)return!0;o=o.parentNode instanceof ShadowRoot?o.parentNode.host:o.parentNode}return!1})(e))return;const n=(t=>{const o=window.getComputedStyle(t);return{top:parseFloat(o.scrollMarginTop)||0,right:parseFloat(o.scrollMarginRight)||0,bottom:parseFloat(o.scrollMarginBottom)||0,left:parseFloat(o.scrollMarginLeft)||0}})(e);if((t=>"object"==typeof t&&"function"==typeof t.behavior)(r))return r.behavior(dist_r(e,r));const l="boolean"==typeof r||null==r?void 0:r.behavior;for(const{el:a,top:i,left:s}of dist_r(e,dist_o(r))){const t=i-n.top+n.bottom,o=s-n.left+n.right;a.scroll({top:t,left:o,behavior:l})}}},"./libs/angular/src/v-angular/dropdown/dropdown.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComboWithInput:()=>ComboWithInput,Disabled:()=>Disabled,Primary:()=>Primary,WithCustomSelectedTemplate:()=>WithCustomSelectedTemplate,WithCustomSelectedTemplateTypeahead:()=>WithCustomSelectedTemplateTypeahead,WithDisplayDisabledAsLocked:()=>WithDisplayDisabledAsLocked,WithError:()=>WithError,WithLockedInput:()=>WithLockedInput,WithOptionToggle:()=>WithOptionToggle,WithTypeAhead:()=>WithTypeAhead,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dropdown_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),i18n_module=__webpack_require__("./libs/angular/src/v-angular/i18n/i18n.module.ts"),tooltip_directive=__webpack_require__("./libs/angular/src/v-angular/tooltip/tooltip.directive.ts"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),character_countdown_directive=__webpack_require__("./libs/angular/src/lib/shared/character-countdown/character-countdown.directive.ts"),core_utils=__webpack_require__("./libs/angular/src/v-angular/core.utils.ts"),dropdown_list_component=__webpack_require__("./libs/angular/src/v-angular/dropdown-list/dropdown-list.component.ts"),input_component=__webpack_require__("./libs/angular/src/v-angular/input/input.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var typeahead_highlight_componentngResource=__webpack_require__("./libs/angular/src/v-angular/typeahead/typeahead-highlight/typeahead-highlight.component.scss?ngResource"),typeahead_highlight_componentngResource_default=__webpack_require__.n(typeahead_highlight_componentngResource);let TypeaheadHighlightComponent=class TypeaheadHighlightComponent{constructor(){this.text="",this.input="",this.allowedNonMatchingChars=new RegExp(/\s/)}ngOnChanges(changes){const{textContent,textToHighlight}=changes;null!=textContent?.currentValue&&(this.text=`${textContent.currentValue}`),null!=textToHighlight?.currentValue&&(this.input=`${textToHighlight.currentValue}`),this.updateValues()}updateValues(){const splittedText=this.text.toLocaleLowerCase().split(""),splittedInput=this.input.toLocaleLowerCase().split(""),{start,end}=this.getHighlightedPart(splittedText,splittedInput);-1!==start&&-1!==end?(this.prefix=this.text.substring(0,start),this.match=this.text.substring(start,end),this.suffix=this.text.substring(end)):this.prefix=this.match=this.suffix=""}getHighlightedPart(splittedText,splittedInput){let start=-1,end=-1;for(let i=0;i<splittedText.length&&!(start>-1||end>-1);i++)if(splittedText[i]===splittedInput[0]){let matches=1;for(let t=1;t<=splittedText.length;t++){if(matches===splittedInput.length){start=i,end=start+t;break}if(splittedText[t+i]!==splittedInput[matches]){if(this.allowedNonMatchingChars.test(splittedText[t+i]))continue;break}matches++}}return{start,end}}static#_=this.propDecorators={textContent:[{type:core.Input}],textToHighlight:[{type:core.Input}]}};TypeaheadHighlightComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngv-typeahead-highlight",template:'<ng-container *ngIf="!this.match">{{ textContent }}</ng-container>\n\x3c!-- Note that this is sensitive to line breaks producing extra spacing between the different parts --\x3e\n<ng-container *ngIf="!!this.match">\n    {{ prefix || \'\' }}<span class="match">{{ match }}</span>{{ suffix ||\'\'}}\n</ng-container>',styles:[typeahead_highlight_componentngResource_default()]})],TypeaheadHighlightComponent);var typeahead_input_component=__webpack_require__("./libs/angular/src/v-angular/typeahead/typeahead-input/typeahead-input.component.ts"),typeahead_directive=__webpack_require__("./libs/angular/src/v-angular/typeahead/typeahead.directive.ts");const dropdown_stories={title:"V-Angular/Dropdown",component:__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown.component.ts").P,decorators:[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(i18n_module.g),core_utils.z]}),(0,dist.moduleMetadata)({declarations:[dropdown_list_component.d,input_component.S,typeahead_input_component.R,TypeaheadHighlightComponent,tooltip_directive.d,character_countdown_directive.q],imports:[common.CommonModule,fesm2022_forms.YN,fesm2022_forms.X1,i18n_module.g,typeahead_directive.X]})]},options=[{key:"opt1",label:"label.defaultlabel",accountNumber:"345345"},{key:"opt6",label:"HÖR LUR TJO HEJ KOTLETT"},{key:"opt2",label:"Option 2"},{key:"opt3",label:"Option 3",disabled:!0},{key:"opt4",label:"Option 4"},{key:"opt5",label:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do"},{label:"Group",options:[{key:"group-opt1",label:null,accountNumber:"3453245"},{key:"group-opt2",label:"Option 2"},{key:"group-opt3",label:"Option 3"},{key:"group-opt4",label:"Option 4"}]}],Template=args=>{const ctrl=new fesm2022_forms.hs(args.ngModel);ctrl.valueChanges.subscribe(console.log);return{template:'\n      <div style="width: 264px">\n        <ngg-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          style="width: 264px"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </ngg-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>',props:{...args,formControl:ctrl,disableFn:()=>{if(ctrl.disabled)return ctrl.enable();ctrl.disable()}}}},AltTemplate=args=>{const dropdownFc=new fesm2022_forms.hs;dropdownFc.valueChanges.subscribe((value=>{console.log({value})}));args.options=options;return{template:'\n      <div style="width: 264px">\n        <div style="display: flex">\n          <button class="sdv-button" (click)="showAlt = !showAlt">Change options</button>\n          <button class="sdv-button sdv-button-alternative" (click)="resetFunc()">Reset to default</button>\n        </div>\n        <div>Value: {{ formControl.value }}</div>\n        <ngg-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [options]="options"\n          [required]="required"\n          style="width: 264px"\n          [formControl]="formControl">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </ngg-dropdown>\n      </div>',props:{...args,showAlt:false,formControl:dropdownFc,resetFunc:()=>{dropdownFc.reset("opt4")}}}},defaultArgs={required:!1,invalid:!1,label:"Field label",placeholder:"Placeholder text",description:"This. Is. A. Description.",ngModel:"opt2",options},Primary=Template.bind({});Primary.args={...defaultArgs};const Disabled=(args=>({template:'\n  <div style="width: 264px">\n    <ngg-dropdown\n      [label]="label"\n      [placeholder]="placeholder"\n      [options]="options"\n      [required]="required"\n      [invalid]="invalid"\n      [disabled]="disabled"\n      [error]="error"\n      style="width: 264px"\n      [formControl]="formControl">\n\n      <ng-template #labelTpl>Custom Label</ng-template>\n\n      <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n    </ngg-dropdown>\n  </div>',props:{...args,formControl:new fesm2022_forms.hs({value:""})}})).bind({});Disabled.args={...defaultArgs,disabled:!0};const WithError=Template.bind({});WithError.args={...defaultArgs,invalid:!0,error:"Error message"};const ComboWithInput=(args=>{const ctrl=new fesm2022_forms.hs(args.ngModel);return ctrl.valueChanges.subscribe(console.log),{template:'\n      <div style="display: flex">\n        <ngg-dropdown\n          label="Dropdown"\n          [placeholder]="placeholder"\n          [options]="options"\n          [required]="true"\n          [invalid]="true"\n          error="This is a permanent error"\n          style="width: 264px"\n          [formControl]="formControl">\n        </ngg-dropdown>\n        <ngv-input\n          label="Input"\n          [placeholder]="placeholder"\n          [required]="true"\n          style="margin-left: 0.25rem; width: 264px"\n          [formControl]="formControl">\n        </ngv-input>\n      </div>',props:{...args,formControl:ctrl}}}).bind({});ComboWithInput.args={...defaultArgs};const WithOptionToggle=AltTemplate.bind({});AltTemplate.args={...defaultArgs,ngModel:"opt2",options};const WithCustomSelectedTemplate=(args=>{const fc=new fesm2022_forms.hs;return{template:'\n      <ngg-dropdown\n        [label]="label"\n        [placeholder]="placeholder"\n        [options]="options"\n        [required]="true"\n        [formControl]="formControl"\n        [locked]="locked"\n        [displayDisabledAsLocked]="displayDisabledAsLocked">\n        <ng-template let-selected #selectedTpl>\n          <div *ngIf="selected?.key" class="account-option">\n            <div class="account-option--label" style="font-weight: 500;">\n              <div>{{ selected?.accountName }}</div>\n              <div>{{ selected?.balance | number: \'1.2-2\':locale }} {{ selected?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ selected?.accountNumber }}</div>\n              <div>Available amount</div>\n            </div>\n          </div>\n          <div *ngIf="!selected?.key" class="account-option" style="color: gray;">Select one</div>\n        </ng-template>\n        <ng-template let-option #optionTpl>\n          <div class="account-option">\n            <div class="account-option--label">\n              <div>{{ option?.accountName }}</div>\n              <div>{{ option?.balance | number: \'1.2-2\':locale }} {{ option?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ option?.accountNumber }}</div>\n              <div></div>\n            </div>\n          </div>\n        </ng-template>\n        \n      </ngg-dropdown>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n      ',styles:["\n      ::ng-deep.ngv-field-dropdown__label::before {\n        margin: 0.5rem 0;\n      }\n      .account-option {\n        margin: 0.5rem 0;\n        padding-right: 0.5rem;\n        width: 350px;\n      }\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected='false']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected='true']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected='true'] .account-option--number {\n        color: white;\n      }\n      .account-option--number,\n      .account-option--label {\n        padding-bottom: 0.25em; \n      }\n      .account-option--label {\n        display: flex;\n      }\n      .account-option--number {\n        line-height: 1;\n        font-size: 0.875em;\n        display: flex;\n        color: gray;\n      }\n      .account-option--label > * {\n        line-height: 1.5rem;\n      }\n      .account-option--number > *:first-child,\n      .account-option--label > *:first-child {\n        flex-grow: 2;\n        // flex-basis: 40%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .account-option--number > *:last-child,\n      .account-option--label > *:last-child {\n        flex-grow: 3;\n        display: flex;\n        justify-content: flex-end;\n      }"],props:{...args,formControl:fc,options:[{key:"se50000000001",label:null,accountNumber:"5000 00 000 01",accountName:"Savings account",balance:1e3,currency:"SEK"},{key:"se50000000002",label:null,accountNumber:"5000 00 000 02",accountName:"Foreign account",balance:100.5,currency:"USD"},{key:"se50000000003",label:null,accountNumber:"5000 00 000 03",accountName:"Account with a really long name",balance:2e3,currency:"SEK"},{key:"se50000000004",label:null,accountNumber:"5000 00 000 04",accountName:"Euro account with €€€",balance:100000000000.5,currency:"EUR"}],disableFn:()=>{if(fc.disabled)return fc.enable();fc.disable()}}}}).bind({});WithCustomSelectedTemplate.args={...defaultArgs,label:"Account selector",locked:!1,displayDisabledAsLocked:!0};const WithCustomSelectedTemplateTypeahead=(args=>{let filterPhrase="";const accounts=[{key:"se50000000001",label:null,accountNumber:"5000 00 000 01",accountName:"Savings account 2",balance:1e3,currency:"SEK"},{key:"se50000000002",label:null,accountNumber:"5000 00 000 02",accountName:"Foreign account 03",balance:100.5,currency:"USD"},{key:"se50000000003",label:null,accountNumber:"5000 00 000 03",accountName:"Account with a really long name",balance:2e3,currency:"SEK"},{key:"se50000000004",label:null,accountNumber:"5000 00 000 04",accountName:"Euro account with €€€",balance:100000000000.5,currency:"EUR"}],fc=new fesm2022_forms.hs;return{template:'\n    Value: {{ formControl.value }}\n    Filter: {{ getFilterPhrase() }}\n      <ngg-dropdown\n        [label]="label"\n        [placeholder]="placeholder"\n        [options]="options"\n        [required]="true"\n        [formControl]="formControl"\n        [locked]="locked"\n        [displayDisabledAsLocked]="displayDisabledAsLocked"\n        [ngvTypeahead]="searchFunction"\n        [selectedFormatter]="selectedFormatter"\n        [resultFormatter]="resultFormatter"\n        [allowUnselect]="true"\n        [unselectLabel]="unselectLabel"\n        (filterPhraseChange)="handlefilterPhraseChange($event)">\n\n        <ng-template let-selected #selectedTpl>\n          <div *ngIf="!!selected?.key" class="account-option">\n            <div class="account-option--label" style="font-weight: 500;">\n              <div>{{ selected?.accountName }}</div>\n              <div>{{ selected?.balance | number: \'1.2-2\':locale }} {{ selected?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ selected?.accountNumber }}</div>\n              <div>Available amount</div>\n            </div>\n          </div>\n          <div *ngIf="!selected?.key" class="account-option" style="color: gray;">Select one</div>\n        </ng-template>\n\n        <ng-template let-option #optionTpl>\n          <div *ngIf="!option.key">\n            {{ (option?.label | transloco) || \'None\' }}\n          </div>\n          <div class="account-option" *ngIf="!!option.key">\n            <div class="account-option--label">\n              <div>\n                <ngv-typeahead-highlight [textContent]="option?.accountName" [textToHighlight]="getFilterPhrase()">\n                </ngv-typeahead-highlight>\n              </div>\n              \n              <div>{{ option?.balance | number: \'1.2-2\':locale }} {{ option?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>\n                <ngv-typeahead-highlight [textContent]="option?.accountNumber" [textToHighlight]="getFilterPhrase()">\n                </ngv-typeahead-highlight></div>\n              <div></div>\n            </div>\n          </div>\n        </ng-template>\n        \n      </ngg-dropdown>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n      ',styles:["\n      ::ng-deep.ngv-field-dropdown__label::before {\n        margin: 0.5rem 0;\n      }\n      .account-option {\n        margin: 0.5rem 0;\n        padding-right: 0.5rem;\n        width: 350px;\n      }\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected='false']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected='true']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected='true'] .account-option--number {\n        color: white;\n      }\n      .account-option--number,\n      .account-option--label {\n        padding-bottom: 0.25em; \n      }\n      .account-option--label {\n        display: flex;\n      }\n      .account-option--number {\n        line-height: 1;\n        font-size: 0.875em;\n        display: flex;\n        color: gray;\n      }\n      .account-option--label > * {\n        line-height: 1.5rem;\n      }\n      .account-option--number > *:first-child,\n      .account-option--label > *:first-child {\n        flex-grow: 2;\n        // flex-basis: 40%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .account-option--number > *:last-child,\n      .account-option--label > *:last-child {\n        flex-grow: 3;\n        display: flex;\n        justify-content: flex-end;\n      }"],props:{...args,formControl:fc,options:accounts,unselectLabel:"Unselect",disableFn:()=>{if(fc.disabled)return fc.enable();fc.disable()},searchFunction:value$=>value$.pipe((0,debounceTime.B)(150),(0,map.T)((inputValue=>accounts.filter((option=>option.accountName?.toUpperCase().includes(inputValue?.toUpperCase())||option.accountNumber?.replace(/\s/,"").includes(inputValue)))))),getFilterPhrase:function getFilterPhrase(){return filterPhrase},handlefilterPhraseChange:event=>{filterPhrase=event},selectedFormatter:account=>account?.accountName}}}).bind({});WithCustomSelectedTemplateTypeahead.args={...defaultArgs,label:"Account selector",locked:!1,displayDisabledAsLocked:!0};const WithLockedInput=Template.bind({});WithLockedInput.args={...Primary.args,ngModel:"opt2",locked:!0,description:void 0};const WithDisplayDisabledAsLocked=Template.bind({});WithDisplayDisabledAsLocked.args={...Primary.args,locked:!1,description:void 0,displayDisabledAsLocked:!0};const WithTypeAhead=(args=>{const ctrl=new fesm2022_forms.hs;return ctrl.valueChanges.subscribe(console.log),{template:'\n    Value: {{ formControl.value }}\n    <div style="width: 264px; display:">\n        <ngg-dropdown\n          [label]="label"\n          [formControl]="formControl"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          style="width: 264px"\n          #dropdownElement\n          [options]="options"\n          [allowUnselect]="allowUnselect"\n          [unselectLabel]="unselectLabel"\n          [ngvTypeahead]="searchFunction"\n          [resultFormatter]="resultFormatter"\n          [selectedFormatter]="selectedFormatter">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n        </ngg-dropdown>\n      </div>',styles:[""],props:{...args,formControl:ctrl,placeholder:"Choose",allowUnselect:!0,unselectLabel:"Unselect",searchFunction:value$=>value$.pipe((0,debounceTime.B)(300),(0,map.T)((inputValue=>options.filter((option=>option.label?.replace(/\s/gm,"").toLocaleLowerCase().includes(inputValue?.replace(/\s/gm,"").toLocaleLowerCase()))))))}}}).bind({});WithTypeAhead.args={...defaultArgs},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const ctrl = new UntypedFormControl(args.ngModel);\n  ctrl.valueChanges.subscribe(console.log);\n  const toggleDisableField = () => {\n    if (!!ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  return {\n    template: /*html*/`\n      <div style="width: 264px">\n        <ngg-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          style="width: 264px"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </ngg-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>`,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...Primary.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const formControl = new UntypedFormControl({\n    value: \'\'\n  });\n  return {\n    template: /*html*/`\n  <div style="width: 264px">\n    <ngg-dropdown\n      [label]="label"\n      [placeholder]="placeholder"\n      [options]="options"\n      [required]="required"\n      [invalid]="invalid"\n      [disabled]="disabled"\n      [error]="error"\n      style="width: 264px"\n      [formControl]="formControl">\n\n      <ng-template #labelTpl>Custom Label</ng-template>\n\n      <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n    </ngg-dropdown>\n  </div>`,\n    props: {\n      ...args,\n      formControl\n    }\n  };\n}',...Disabled.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const ctrl = new UntypedFormControl(args.ngModel);\n  ctrl.valueChanges.subscribe(console.log);\n  const toggleDisableField = () => {\n    if (!!ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  return {\n    template: /*html*/`\n      <div style="width: 264px">\n        <ngg-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          style="width: 264px"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </ngg-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>`,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithError.parameters?.docs?.source}}},ComboWithInput.parameters={...ComboWithInput.parameters,docs:{...ComboWithInput.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const ctrl = new UntypedFormControl(args.ngModel);\n  ctrl.valueChanges.subscribe(console.log);\n  return {\n    template: /*html*/`\n      <div style="display: flex">\n        <ngg-dropdown\n          label="Dropdown"\n          [placeholder]="placeholder"\n          [options]="options"\n          [required]="true"\n          [invalid]="true"\n          error="This is a permanent error"\n          style="width: 264px"\n          [formControl]="formControl">\n        </ngg-dropdown>\n        <ngv-input\n          label="Input"\n          [placeholder]="placeholder"\n          [required]="true"\n          style="margin-left: 0.25rem; width: 264px"\n          [formControl]="formControl">\n        </ngv-input>\n      </div>`,\n    props: {\n      ...args,\n      formControl: ctrl\n    }\n  };\n}',...ComboWithInput.parameters?.docs?.source}}},WithOptionToggle.parameters={...WithOptionToggle.parameters,docs:{...WithOptionToggle.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const dropdownFc = new UntypedFormControl();\n  dropdownFc.valueChanges.subscribe(value => {\n    console.log({\n      value\n    });\n  });\n  let showAlt = false;\n  const optionsAlt = [{\n    key: \'opt7\',\n    label: \'Option 7\'\n  }, {\n    key: \'opt8\',\n    label: \'Option 8\'\n  }, {\n    key: \'opt9\',\n    label: \'Option 9\'\n  }];\n  args.options = showAlt ? optionsAlt : options;\n  const reset = () => {\n    dropdownFc.reset(\'opt4\');\n  };\n  return {\n    template: /*html*/`\n      <div style="width: 264px">\n        <div style="display: flex">\n          <button class="sdv-button" (click)="showAlt = !showAlt">Change options</button>\n          <button class="sdv-button sdv-button-alternative" (click)="resetFunc()">Reset to default</button>\n        </div>\n        <div>Value: {{ formControl.value }}</div>\n        <ngg-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [options]="options"\n          [required]="required"\n          style="width: 264px"\n          [formControl]="formControl">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </ngg-dropdown>\n      </div>`,\n    props: {\n      ...args,\n      showAlt: showAlt,\n      formControl: dropdownFc,\n      resetFunc: reset\n    }\n  };\n}',...WithOptionToggle.parameters?.docs?.source}}},WithCustomSelectedTemplate.parameters={...WithCustomSelectedTemplate.parameters,docs:{...WithCustomSelectedTemplate.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const accounts = [{\n    key: \'se50000000001\',\n    label: null,\n    accountNumber: \'5000 00 000 01\',\n    accountName: \'Savings account\',\n    balance: 1000,\n    currency: \'SEK\'\n  }, {\n    key: \'se50000000002\',\n    label: null,\n    accountNumber: \'5000 00 000 02\',\n    accountName: \'Foreign account\',\n    balance: 100.5,\n    currency: \'USD\'\n  }, {\n    key: \'se50000000003\',\n    label: null,\n    accountNumber: \'5000 00 000 03\',\n    accountName: \'Account with a really long name\',\n    balance: 2000,\n    currency: \'SEK\'\n  }, {\n    key: \'se50000000004\',\n    label: null,\n    accountNumber: \'5000 00 000 04\',\n    accountName: \'Euro account with €€€\',\n    balance: 100000000000.5,\n    currency: \'EUR\'\n  }];\n  const fc = new UntypedFormControl();\n  const toggleDisableField = () => {\n    if (!!fc.disabled) return fc.enable();\n    fc.disable();\n  };\n  return {\n    template: /*html*/`\n      <ngg-dropdown\n        [label]="label"\n        [placeholder]="placeholder"\n        [options]="options"\n        [required]="true"\n        [formControl]="formControl"\n        [locked]="locked"\n        [displayDisabledAsLocked]="displayDisabledAsLocked">\n        <ng-template let-selected #selectedTpl>\n          <div *ngIf="selected?.key" class="account-option">\n            <div class="account-option--label" style="font-weight: 500;">\n              <div>{{ selected?.accountName }}</div>\n              <div>{{ selected?.balance | number: \'1.2-2\':locale }} {{ selected?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ selected?.accountNumber }}</div>\n              <div>Available amount</div>\n            </div>\n          </div>\n          <div *ngIf="!selected?.key" class="account-option" style="color: gray;">Select one</div>\n        </ng-template>\n        <ng-template let-option #optionTpl>\n          <div class="account-option">\n            <div class="account-option--label">\n              <div>{{ option?.accountName }}</div>\n              <div>{{ option?.balance | number: \'1.2-2\':locale }} {{ option?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ option?.accountNumber }}</div>\n              <div></div>\n            </div>\n          </div>\n        </ng-template>\n        \n      </ngg-dropdown>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n      `,\n    styles: [`\n      ::ng-deep.ngv-field-dropdown__label::before {\n        margin: 0.5rem 0;\n      }\n      .account-option {\n        margin: 0.5rem 0;\n        padding-right: 0.5rem;\n        width: 350px;\n      }\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected=\'false\']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected=\'true\']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected=\'true\'] .account-option--number {\n        color: white;\n      }\n      .account-option--number,\n      .account-option--label {\n        padding-bottom: 0.25em; \n      }\n      .account-option--label {\n        display: flex;\n      }\n      .account-option--number {\n        line-height: 1;\n        font-size: 0.875em;\n        display: flex;\n        color: gray;\n      }\n      .account-option--label > * {\n        line-height: 1.5rem;\n      }\n      .account-option--number > *:first-child,\n      .account-option--label > *:first-child {\n        flex-grow: 2;\n        // flex-basis: 40%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .account-option--number > *:last-child,\n      .account-option--label > *:last-child {\n        flex-grow: 3;\n        display: flex;\n        justify-content: flex-end;\n      }`],\n    props: {\n      ...args,\n      formControl: fc,\n      options: accounts,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithCustomSelectedTemplate.parameters?.docs?.source}}},WithCustomSelectedTemplateTypeahead.parameters={...WithCustomSelectedTemplateTypeahead.parameters,docs:{...WithCustomSelectedTemplateTypeahead.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  let filterPhrase = \'\';\n  const accounts = [{\n    key: \'se50000000001\',\n    label: null,\n    accountNumber: \'5000 00 000 01\',\n    accountName: \'Savings account 2\',\n    balance: 1000,\n    currency: \'SEK\'\n  }, {\n    key: \'se50000000002\',\n    label: null,\n    accountNumber: \'5000 00 000 02\',\n    accountName: \'Foreign account 03\',\n    balance: 100.5,\n    currency: \'USD\'\n  }, {\n    key: \'se50000000003\',\n    label: null,\n    accountNumber: \'5000 00 000 03\',\n    accountName: \'Account with a really long name\',\n    balance: 2000,\n    currency: \'SEK\'\n  }, {\n    key: \'se50000000004\',\n    label: null,\n    accountNumber: \'5000 00 000 04\',\n    accountName: \'Euro account with €€€\',\n    balance: 100000000000.5,\n    currency: \'EUR\'\n  }];\n  const fc = new UntypedFormControl();\n  const toggleDisableField = () => {\n    if (!!fc.disabled) return fc.enable();\n    fc.disable();\n  };\n  const searchFunction = (value$: Observable<string>) => value$.pipe(debounceTime(150), map(inputValue => accounts.filter((option: {\n    accountNumber: string;\n    accountName: string;\n  }) => option.accountName?.toUpperCase().includes(inputValue?.toUpperCase()) || option.accountNumber?.replace(/\\s/, \'\').includes(inputValue))));\n  const handlefilterPhraseChange = (event: any) => {\n    filterPhrase = event;\n  };\n  function getFilterPhrase(): string {\n    return filterPhrase;\n  }\n  return {\n    template: /*html*/`\n    Value: {{ formControl.value }}\n    Filter: {{ getFilterPhrase() }}\n      <ngg-dropdown\n        [label]="label"\n        [placeholder]="placeholder"\n        [options]="options"\n        [required]="true"\n        [formControl]="formControl"\n        [locked]="locked"\n        [displayDisabledAsLocked]="displayDisabledAsLocked"\n        [ngvTypeahead]="searchFunction"\n        [selectedFormatter]="selectedFormatter"\n        [resultFormatter]="resultFormatter"\n        [allowUnselect]="true"\n        [unselectLabel]="unselectLabel"\n        (filterPhraseChange)="handlefilterPhraseChange($event)">\n\n        <ng-template let-selected #selectedTpl>\n          <div *ngIf="!!selected?.key" class="account-option">\n            <div class="account-option--label" style="font-weight: 500;">\n              <div>{{ selected?.accountName }}</div>\n              <div>{{ selected?.balance | number: \'1.2-2\':locale }} {{ selected?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ selected?.accountNumber }}</div>\n              <div>Available amount</div>\n            </div>\n          </div>\n          <div *ngIf="!selected?.key" class="account-option" style="color: gray;">Select one</div>\n        </ng-template>\n\n        <ng-template let-option #optionTpl>\n          <div *ngIf="!option.key">\n            {{ (option?.label | transloco) || \'None\' }}\n          </div>\n          <div class="account-option" *ngIf="!!option.key">\n            <div class="account-option--label">\n              <div>\n                <ngv-typeahead-highlight [textContent]="option?.accountName" [textToHighlight]="getFilterPhrase()">\n                </ngv-typeahead-highlight>\n              </div>\n              \n              <div>{{ option?.balance | number: \'1.2-2\':locale }} {{ option?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>\n                <ngv-typeahead-highlight [textContent]="option?.accountNumber" [textToHighlight]="getFilterPhrase()">\n                </ngv-typeahead-highlight></div>\n              <div></div>\n            </div>\n          </div>\n        </ng-template>\n        \n      </ngg-dropdown>\n      <div style="margin-top: 1rem">\n        <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n      `,\n    styles: [`\n      ::ng-deep.ngv-field-dropdown__label::before {\n        margin: 0.5rem 0;\n      }\n      .account-option {\n        margin: 0.5rem 0;\n        padding-right: 0.5rem;\n        width: 350px;\n      }\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected=\'false\']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected=\'true\']:hover .account-option--number,\n      ::ng-deep.sdv-field-dropdown__options__label[aria-selected=\'true\'] .account-option--number {\n        color: white;\n      }\n      .account-option--number,\n      .account-option--label {\n        padding-bottom: 0.25em; \n      }\n      .account-option--label {\n        display: flex;\n      }\n      .account-option--number {\n        line-height: 1;\n        font-size: 0.875em;\n        display: flex;\n        color: gray;\n      }\n      .account-option--label > * {\n        line-height: 1.5rem;\n      }\n      .account-option--number > *:first-child,\n      .account-option--label > *:first-child {\n        flex-grow: 2;\n        // flex-basis: 40%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .account-option--number > *:last-child,\n      .account-option--label > *:last-child {\n        flex-grow: 3;\n        display: flex;\n        justify-content: flex-end;\n      }`],\n    props: {\n      ...args,\n      formControl: fc,\n      options: accounts,\n      unselectLabel: \'Unselect\',\n      disableFn: toggleDisableField,\n      searchFunction: searchFunction,\n      getFilterPhrase: getFilterPhrase,\n      handlefilterPhraseChange: handlefilterPhraseChange,\n      selectedFormatter: (account: {\n        key: string;\n        label: string;\n        accountNumber: string;\n        accountName: string;\n        balance: number;\n        currency: string;\n      }) => account?.accountName\n    }\n  };\n}',...WithCustomSelectedTemplateTypeahead.parameters?.docs?.source}}},WithLockedInput.parameters={...WithLockedInput.parameters,docs:{...WithLockedInput.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const ctrl = new UntypedFormControl(args.ngModel);\n  ctrl.valueChanges.subscribe(console.log);\n  const toggleDisableField = () => {\n    if (!!ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  return {\n    template: /*html*/`\n      <div style="width: 264px">\n        <ngg-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          style="width: 264px"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </ngg-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>`,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithLockedInput.parameters?.docs?.source}}},WithDisplayDisabledAsLocked.parameters={...WithDisplayDisabledAsLocked.parameters,docs:{...WithDisplayDisabledAsLocked.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const ctrl = new UntypedFormControl(args.ngModel);\n  ctrl.valueChanges.subscribe(console.log);\n  const toggleDisableField = () => {\n    if (!!ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  return {\n    template: /*html*/`\n      <div style="width: 264px">\n        <ngg-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          style="width: 264px"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </ngg-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>`,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithDisplayDisabledAsLocked.parameters?.docs?.source}}},WithTypeAhead.parameters={...WithTypeAhead.parameters,docs:{...WithTypeAhead.parameters?.docs,source:{originalSource:'(args: StoryArgs) => {\n  const ctrl = new UntypedFormControl();\n  ctrl.valueChanges.subscribe(console.log);\n  return {\n    template: /*html*/`\n    Value: {{ formControl.value }}\n    <div style="width: 264px; display:">\n        <ngg-dropdown\n          [label]="label"\n          [formControl]="formControl"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          style="width: 264px"\n          #dropdownElement\n          [options]="options"\n          [allowUnselect]="allowUnselect"\n          [unselectLabel]="unselectLabel"\n          [ngvTypeahead]="searchFunction"\n          [resultFormatter]="resultFormatter"\n          [selectedFormatter]="selectedFormatter">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n        </ngg-dropdown>\n      </div>`,\n    /*css*/\n    styles: [``],\n    props: {\n      ...args,\n      formControl: ctrl,\n      placeholder: \'Choose\',\n      allowUnselect: true,\n      unselectLabel: \'Unselect\',\n      searchFunction: (value$: Observable<string>) => value$.pipe(debounceTime(300), map(inputValue => options.filter((option: any) => option.label?.replace(/\\s/gm, \'\').toLocaleLowerCase().includes(inputValue?.replace(/\\s/gm, \'\').toLocaleLowerCase()))))\n    }\n  };\n}',...WithTypeAhead.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Disabled","WithError","ComboWithInput","WithOptionToggle","WithCustomSelectedTemplate","WithCustomSelectedTemplateTypeahead","WithLockedInput","WithDisplayDisabledAsLocked","WithTypeAhead"]},"./libs/angular/src/v-angular/typeahead/typeahead-highlight/typeahead-highlight.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host .match {\n  font-weight: 500;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);