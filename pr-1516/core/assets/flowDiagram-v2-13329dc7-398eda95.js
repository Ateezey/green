import{p as i,f as o}from"./flowDb-c1833063-f8e3771c.js";import{f as t,a as m}from"./styles-483fbfea-7d631a2c.js";import{y as p}from"./architecture-b01f7e33.js";import"./graph-ab7f79fb.js";import"./layout-1d91a6b5.js";import"./index-01f381cb-c1390925.js";import"./clone-1d2dc170.js";import"./edges-066a5561-9b0c2bf4.js";import"./createText-ca0c5216-2d04d6b6.js";import"./index-356e4a49.js";import"./line-8da71237.js";import"./array-9f3ba611.js";import"./path-53f90ab3.js";import"./channel-4e05d556.js";import"./jsx-runtime-138a416d.js";import"./index-cebe9ee7.js";import"./iframe-417c95f8.js";import"../sb-preview/runtime.js";import"./_commonjsHelpers-725317a4.js";import"./index-d38538b0.js";import"./chunk-HLWAVYOI-f0355b41.js";import"./index-de30426e.js";const S={parser:i,db:o,renderer:t,styles:m,init:r=>{r.flowchart||(r.flowchart={}),r.flowchart.arrowMarkerAbsolute=r.arrowMarkerAbsolute,p({flowchart:{arrowMarkerAbsolute:r.arrowMarkerAbsolute}}),t.setConf(r.flowchart),o.clear(),o.setGen("gen-2")}};export{S as diagram};
