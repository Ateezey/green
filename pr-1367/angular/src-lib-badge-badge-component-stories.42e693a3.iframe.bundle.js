(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[3291],{"./libs/angular/src/lib/badge/badge.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{v:()=>NggBadgeComponent});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let NggBadgeComponent=class NggBadgeComponent{set isCloseable(value){this._isCloseable=value}get isCloseable(){return""===this._isCloseable||!!this._isCloseable}get class(){return["badge",this.badgeType].join(" ")}constructor(){this.badgeType="",this.handleClose=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter}ngOnInit(){(this.customColor||this.customBackgroundColor)&&(this.badgeType="")}close(e){this.handleClose.emit(e)}static#_=this.ctorParameters=()=>[];static#_2=this.propDecorators={badgeType:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],isCloseable:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],closeText:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],customColor:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["style.color"]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],customBackgroundColor:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["style.background-color"]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],class:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class"]}],handleClose:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}]}};NggBadgeComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component)({selector:"[ngg-badge]",template:'\n    <strong>\n      <ng-content></ng-content>\n    </strong>\n    <button *ngIf="isCloseable" class="close" (click)="close($event)">\n      {{ closeText }}\n      <i></i>\n    </button>\n  ',changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush}),(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Sn)("design:paramtypes",[])],NggBadgeComponent)},"./libs/angular/src/lib/badge/badge.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Heading:()=>Heading,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _home_runner_work_green_green_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_badge_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/angular/src/lib/badge/badge.component.ts"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_storybook_jest__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/jest/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={component:_badge_component__WEBPACK_IMPORTED_MODULE_0__.v,title:"NggBadgeComponent"},Primary={args:{badgeType:"",isCloseable:!1,closeText:"",customColor:"",customBackgroundColor:""}},Heading={args:{badgeType:"",isCloseable:!0,closeText:"",customColor:"",customBackgroundColor:""},play:(_ref=(0,_home_runner_work_green_green_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__.A)((function*({canvasElement}){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_3__.E)(canvas.getByText(/badge works!/gi)).toBeTruthy()})),function play(_x){return _ref.apply(this,arguments)})};var _ref;Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    badgeType: '',\n    isCloseable: false,\n    closeText: '',\n    customColor: '',\n    customBackgroundColor: ''\n  }\n}",...Primary.parameters?.docs?.source}}},Heading.parameters={...Heading.parameters,docs:{...Heading.parameters?.docs,source:{originalSource:"{\n  args: {\n    badgeType: '',\n    isCloseable: true,\n    closeText: '',\n    customColor: '',\n    customBackgroundColor: ''\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/badge works!/gi)).toBeTruthy();\n  }\n}",...Heading.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Heading"]},"?4f7e":()=>{}}]);