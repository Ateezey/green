import{g as m,G as n,h as u}from"./gds-element-54cd6e2a.js";import{t as v}from"./tokens.style-880811e7.js";import{s as o}from"./style-expression-property-89161d08.js";import{i as g}from"./lit-element-71e04f06.js";const f=g`
  :host {
    gap: var(--_gap-column) var(--_gap-row);
    box-sizing: border-box;
    display: flex;
  }
`;var c=Object.defineProperty,d=Object.getOwnPropertyDescriptor,p=(e,r,a,s)=>{for(var l=s>1?void 0:s?d(r,a):r,y=e.length-1,i;y>=0;y--)(i=e[y])&&(l=(s?i(r,a,l):i(l))||l);return s&&l&&c(r,a,l),l};let t=class extends n{render(){return u`<slot></slot>`}};t.styles=[v,f];p([o({styleTemplate:(e,r)=>{const a=r[0],s=r[1]||a;return`--_gap-column: ${a}; --_gap-row: ${s};`}})],t.prototype,"gap",2);p([o({property:"--_row-gap",valueTemplate:e=>e})],t.prototype,"rowGap",2);p([o()],t.prototype,"padding",2);p([o()],t.prototype,"margin",2);p([o({property:"position",valueTemplate:e=>e})],t.prototype,"position",2);p([o({property:"inset",valueTemplate:e=>e})],t.prototype,"inset",2);p([o({property:"overflow",valueTemplate:e=>e})],t.prototype,"overflow",2);p([o({property:"align-items",valueTemplate:e=>e})],t.prototype,"align",2);p([o({property:"justify-content",valueTemplate:e=>e})],t.prototype,"justify",2);p([o({property:"flex-direction",valueTemplate:e=>e})],t.prototype,"direction",2);p([o({property:"grid-column",valueTemplate:e=>`${e}`})],t.prototype,"column",2);p([o({property:"grid-row",valueTemplate:e=>`${e}`})],t.prototype,"row",2);p([o({property:"height",valueTemplate:e=>e})],t.prototype,"height",2);p([o({property:"width",valueTemplate:e=>e})],t.prototype,"width",2);p([o({property:"z-index",valueTemplate:e=>e})],t.prototype,"stack",2);t=p([m("gds-flex")],t);export{t as G};
